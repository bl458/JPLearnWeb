{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\n/**\n * ViterbiLattice is a lattice in Viterbi algorithm\n * @constructor\n */\n\n\nfunction ViterbiLattice() {\n  this.nodes_end_at = [];\n  this.nodes_end_at[0] = [new ViterbiNode(-1, 0, 0, 0, \"BOS\", 0, 0, \"\")];\n  this.eos_pos = 1;\n}\n/**\n * Append node to ViterbiLattice\n * @param {ViterbiNode} node\n */\n\n\nViterbiLattice.prototype.append = function (node) {\n  var last_pos = node.start_pos + node.length - 1;\n\n  if (this.eos_pos < last_pos) {\n    this.eos_pos = last_pos;\n  }\n\n  var prev_nodes = this.nodes_end_at[last_pos];\n\n  if (prev_nodes == null) {\n    prev_nodes = [];\n  }\n\n  prev_nodes.push(node);\n  this.nodes_end_at[last_pos] = prev_nodes;\n};\n/**\n * Set ends with EOS (End of Statement)\n */\n\n\nViterbiLattice.prototype.appendEos = function () {\n  var last_index = this.nodes_end_at.length;\n  this.eos_pos++;\n  this.nodes_end_at[last_index] = [new ViterbiNode(-1, 0, this.eos_pos, 0, \"EOS\", 0, 0, \"\")];\n};\n\nmodule.exports = ViterbiLattice;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/node_modules/kuromoji/src/viterbi/ViterbiLattice.js"],"names":["ViterbiNode","require","ViterbiLattice","nodes_end_at","eos_pos","prototype","append","node","last_pos","start_pos","length","prev_nodes","push","appendEos","last_index","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAEA;;;;;;AAIA,SAASC,cAAT,GAA0B;AACtB,OAAKC,YAAL,GAAoB,EAApB;AACA,OAAKA,YAAL,CAAkB,CAAlB,IAAuB,CAAE,IAAIH,WAAJ,CAAgB,CAAC,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAA7B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,EAA1C,CAAF,CAAvB;AACA,OAAKI,OAAL,GAAe,CAAf;AACH;AAED;;;;;;AAIAF,cAAc,CAACG,SAAf,CAAyBC,MAAzB,GAAkC,UAAUC,IAAV,EAAgB;AAC9C,MAAIC,QAAQ,GAAGD,IAAI,CAACE,SAAL,GAAiBF,IAAI,CAACG,MAAtB,GAA+B,CAA9C;;AACA,MAAI,KAAKN,OAAL,GAAeI,QAAnB,EAA6B;AACzB,SAAKJ,OAAL,GAAeI,QAAf;AACH;;AAED,MAAIG,UAAU,GAAG,KAAKR,YAAL,CAAkBK,QAAlB,CAAjB;;AACA,MAAIG,UAAU,IAAI,IAAlB,EAAwB;AACpBA,IAAAA,UAAU,GAAG,EAAb;AACH;;AACDA,EAAAA,UAAU,CAACC,IAAX,CAAgBL,IAAhB;AAEA,OAAKJ,YAAL,CAAkBK,QAAlB,IAA8BG,UAA9B;AACH,CAbD;AAeA;;;;;AAGAT,cAAc,CAACG,SAAf,CAAyBQ,SAAzB,GAAqC,YAAY;AAC7C,MAAIC,UAAU,GAAG,KAAKX,YAAL,CAAkBO,MAAnC;AACA,OAAKN,OAAL;AACA,OAAKD,YAAL,CAAkBW,UAAlB,IAAgC,CAAE,IAAId,WAAJ,CAAgB,CAAC,CAAjB,EAAoB,CAApB,EAAuB,KAAKI,OAA5B,EAAqC,CAArC,EAAwC,KAAxC,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,EAArD,CAAF,CAAhC;AACH,CAJD;;AAMAW,MAAM,CAACC,OAAP,GAAiBd,cAAjB","sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\n\n/**\n * ViterbiLattice is a lattice in Viterbi algorithm\n * @constructor\n */\nfunction ViterbiLattice() {\n    this.nodes_end_at = [];\n    this.nodes_end_at[0] = [ new ViterbiNode(-1, 0, 0, 0, \"BOS\", 0, 0, \"\") ];\n    this.eos_pos = 1;\n}\n\n/**\n * Append node to ViterbiLattice\n * @param {ViterbiNode} node\n */\nViterbiLattice.prototype.append = function (node) {\n    var last_pos = node.start_pos + node.length - 1;\n    if (this.eos_pos < last_pos) {\n        this.eos_pos = last_pos;\n    }\n\n    var prev_nodes = this.nodes_end_at[last_pos];\n    if (prev_nodes == null) {\n        prev_nodes = [];\n    }\n    prev_nodes.push(node);\n\n    this.nodes_end_at[last_pos] = prev_nodes;\n};\n\n/**\n * Set ends with EOS (End of Statement)\n */\nViterbiLattice.prototype.appendEos = function () {\n    var last_index = this.nodes_end_at.length;\n    this.eos_pos++;\n    this.nodes_end_at[last_index] = [ new ViterbiNode(-1, 0, this.eos_pos, 0, \"EOS\", 0, 0, \"\") ];\n};\n\nmodule.exports = ViterbiLattice;\n"]},"metadata":{},"sourceType":"script"}