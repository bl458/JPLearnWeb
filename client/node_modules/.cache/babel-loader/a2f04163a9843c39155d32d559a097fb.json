{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n/**\n * Mappings between IPADIC dictionary features and tokenized results\n * @constructor\n */\n\nfunction IpadicFormatter() {}\n\nIpadicFormatter.prototype.formatEntry = function (word_id, position, type, features) {\n  var token = {};\n  token.word_id = word_id;\n  token.word_type = type;\n  token.word_position = position;\n  token.surface_form = features[0];\n  token.pos = features[1];\n  token.pos_detail_1 = features[2];\n  token.pos_detail_2 = features[3];\n  token.pos_detail_3 = features[4];\n  token.conjugated_type = features[5];\n  token.conjugated_form = features[6];\n  token.basic_form = features[7];\n  token.reading = features[8];\n  token.pronunciation = features[9];\n  return token;\n};\n\nIpadicFormatter.prototype.formatUnknownEntry = function (word_id, position, type, features, surface_form) {\n  var token = {};\n  token.word_id = word_id;\n  token.word_type = type;\n  token.word_position = position;\n  token.surface_form = surface_form;\n  token.pos = features[1];\n  token.pos_detail_1 = features[2];\n  token.pos_detail_2 = features[3];\n  token.pos_detail_3 = features[4];\n  token.conjugated_type = features[5];\n  token.conjugated_form = features[6];\n  token.basic_form = features[7]; // token.reading = features[8];\n  // token.pronunciation = features[9];\n\n  return token;\n};\n\nmodule.exports = IpadicFormatter;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/node_modules/kuromoji/src/util/IpadicFormatter.js"],"names":["IpadicFormatter","prototype","formatEntry","word_id","position","type","features","token","word_type","word_position","surface_form","pos","pos_detail_1","pos_detail_2","pos_detail_3","conjugated_type","conjugated_form","basic_form","reading","pronunciation","formatUnknownEntry","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;AAEA;;;;;AAIA,SAASA,eAAT,GAA2B,CAC1B;;AAEDA,eAAe,CAACC,SAAhB,CAA0BC,WAA1B,GAAwC,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6C;AACjF,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,CAACJ,OAAN,GAAgBA,OAAhB;AACAI,EAAAA,KAAK,CAACC,SAAN,GAAkBH,IAAlB;AACAE,EAAAA,KAAK,CAACE,aAAN,GAAsBL,QAAtB;AAEAG,EAAAA,KAAK,CAACG,YAAN,GAAqBJ,QAAQ,CAAC,CAAD,CAA7B;AACAC,EAAAA,KAAK,CAACI,GAAN,GAAYL,QAAQ,CAAC,CAAD,CAApB;AACAC,EAAAA,KAAK,CAACK,YAAN,GAAqBN,QAAQ,CAAC,CAAD,CAA7B;AACAC,EAAAA,KAAK,CAACM,YAAN,GAAqBP,QAAQ,CAAC,CAAD,CAA7B;AACAC,EAAAA,KAAK,CAACO,YAAN,GAAqBR,QAAQ,CAAC,CAAD,CAA7B;AACAC,EAAAA,KAAK,CAACQ,eAAN,GAAwBT,QAAQ,CAAC,CAAD,CAAhC;AACAC,EAAAA,KAAK,CAACS,eAAN,GAAwBV,QAAQ,CAAC,CAAD,CAAhC;AACAC,EAAAA,KAAK,CAACU,UAAN,GAAmBX,QAAQ,CAAC,CAAD,CAA3B;AACAC,EAAAA,KAAK,CAACW,OAAN,GAAgBZ,QAAQ,CAAC,CAAD,CAAxB;AACAC,EAAAA,KAAK,CAACY,aAAN,GAAsBb,QAAQ,CAAC,CAAD,CAA9B;AAEA,SAAOC,KAAP;AACH,CAlBD;;AAoBAP,eAAe,CAACC,SAAhB,CAA0BmB,kBAA1B,GAA+C,UAAUjB,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CI,YAA7C,EAA2D;AACtG,MAAIH,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,CAACJ,OAAN,GAAgBA,OAAhB;AACAI,EAAAA,KAAK,CAACC,SAAN,GAAkBH,IAAlB;AACAE,EAAAA,KAAK,CAACE,aAAN,GAAsBL,QAAtB;AAEAG,EAAAA,KAAK,CAACG,YAAN,GAAqBA,YAArB;AACAH,EAAAA,KAAK,CAACI,GAAN,GAAYL,QAAQ,CAAC,CAAD,CAApB;AACAC,EAAAA,KAAK,CAACK,YAAN,GAAqBN,QAAQ,CAAC,CAAD,CAA7B;AACAC,EAAAA,KAAK,CAACM,YAAN,GAAqBP,QAAQ,CAAC,CAAD,CAA7B;AACAC,EAAAA,KAAK,CAACO,YAAN,GAAqBR,QAAQ,CAAC,CAAD,CAA7B;AACAC,EAAAA,KAAK,CAACQ,eAAN,GAAwBT,QAAQ,CAAC,CAAD,CAAhC;AACAC,EAAAA,KAAK,CAACS,eAAN,GAAwBV,QAAQ,CAAC,CAAD,CAAhC;AACAC,EAAAA,KAAK,CAACU,UAAN,GAAmBX,QAAQ,CAAC,CAAD,CAA3B,CAbsG,CActG;AACA;;AAEA,SAAOC,KAAP;AACH,CAlBD;;AAoBAc,MAAM,CAACC,OAAP,GAAiBtB,eAAjB","sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Mappings between IPADIC dictionary features and tokenized results\n * @constructor\n */\nfunction IpadicFormatter() {\n}\n\nIpadicFormatter.prototype.formatEntry = function (word_id, position, type, features) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = features[0];\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    token.reading = features[8];\n    token.pronunciation = features[9];\n\n    return token;\n};\n\nIpadicFormatter.prototype.formatUnknownEntry = function (word_id, position, type, features, surface_form) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = surface_form;\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    // token.reading = features[8];\n    // token.pronunciation = features[9];\n\n    return token;\n};\n\nmodule.exports = IpadicFormatter;\n"]},"metadata":{},"sourceType":"script"}