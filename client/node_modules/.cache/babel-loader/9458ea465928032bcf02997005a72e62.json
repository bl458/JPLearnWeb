{"ast":null,"code":"var _jsxFileName = \"/home/byungchan/Projects/react/JapaneseQuiz/src/video/Subtitle.js\";\nimport React, { Component } from 'react';\nimport Kuroshiro from 'kuroshiro';\nimport KuromojiAnalyzer from \"kuroshiro-analyzer-kuromoji\";\nimport { Tooltip } from 'reactstrap';\n\nclass Subtitle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipOpen: false,\n      tooltipText: ''\n    };\n\n    this.toggle = () => this.setState({\n      tooltipOpen: window.getSelection().toString() !== '' && !this.state.tooltipOpen\n    });\n\n    this.toFuri = async jp => {\n      var kuroshiro = new Kuroshiro();\n      await kuroshiro.init(new KuromojiAnalyzer({\n        dictPath: \"/dict\"\n      }));\n      return await kuroshiro.convert(jp, {\n        to: \"hiragana\"\n      });\n    };\n\n    this.onHighlight = () => {\n      if (window.getSelection().toString() !== '') {\n        this.toFuri(window.getSelection().toString()).then(result => {\n          this.setState({\n            tooltipText: result\n          });\n        });\n      }\n    };\n\n    this.tooltipOffset = () => {\n      if (window.getSelection().toString() !== '') {\n        var a = (window.getSelection().getRangeAt(0).getBoundingClientRect().left + window.getSelection().getRangeAt(0).getBoundingClientRect().right) / 2;\n        var b = (this.myRef.current.getBoundingClientRect().left + this.myRef.current.getBoundingClientRect().right) / 2;\n        return a - b;\n      }\n    };\n\n    this.addVocab = () => {\n      console.log('Adding vocab for id: ', this.props.id);\n      const googleId = this.props.id;\n      const vidId = ''; //placeholder\n\n      const kanji = window.getSelection().toString();\n      const hiragana = this.state.tooltipText;\n      const english = ''; //placeholder\n\n      fetch(`http://localhost:4000/video_vocab?googleId=${googleId}&vidId=${vidId}&kanji=${kanji}&hiragana=${hiragana}&english=${english}`);\n      console.log('GoogleId: ', googleId, 'VidId: ', vidId, 'Kanji: ', kanji, 'Hiragana:', hiragana, 'English: ', english);\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.myRef,\n      className: \"subtitle\",\n      onClick: this.onHighlight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jp-sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      href: \"#\",\n      id: \"jpSub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }\n    }, this.props.jpSub)), /*#__PURE__*/React.createElement(Tooltip, {\n      className: \"in\",\n      placement: \"auto\",\n      offset: this.tooltipOffset(),\n      isOpen: this.state.tooltipOpen,\n      autohide: false,\n      target: \"jpSub\",\n      toggle: this.toggle,\n      delay: {\n        \"show\": '0',\n        \"hide\": '400'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tooltip-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, this.state.tooltipText, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addVocab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Add to video deck!\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eng-sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, this.props.engSub), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default Subtitle;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/src/video/Subtitle.js"],"names":["React","Component","Kuroshiro","KuromojiAnalyzer","Tooltip","Subtitle","constructor","props","state","tooltipOpen","tooltipText","toggle","setState","window","getSelection","toString","toFuri","jp","kuroshiro","init","dictPath","convert","to","onHighlight","then","result","tooltipOffset","a","getRangeAt","getBoundingClientRect","left","right","b","myRef","current","addVocab","console","log","id","googleId","vidId","kanji","hiragana","english","fetch","createRef","render","jpSub","engSub"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Kuroshiro from 'kuroshiro'\nimport KuromojiAnalyzer from \"kuroshiro-analyzer-kuromoji\"\nimport { Tooltip } from 'reactstrap'\n\n\nclass Subtitle extends Component {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n  }\n\n  state={\n    tooltipOpen: false,\n    tooltipText: ''\n  }\n\n  toggle = () => this.setState({tooltipOpen: window.getSelection().toString() !== ''&&!this.state.tooltipOpen})\n\n  toFuri = async (jp) => {\n    var kuroshiro = new Kuroshiro()\n    await kuroshiro.init(new KuromojiAnalyzer({ dictPath: \"/dict\" }))\n    return await kuroshiro.convert(jp, { to: \"hiragana\" })\n  }\n\n  onHighlight = () => {\n    if (window.getSelection().toString() !== '') {\n      this.toFuri(window.getSelection().toString()).then(\n        (result) => {this.setState({tooltipText: result})}\n      )\n    }\n  }\n\n  tooltipOffset = () => {\n      if (window.getSelection().toString() !== '') {\n        var a = (window.getSelection().getRangeAt(0).getBoundingClientRect().left\n          + window.getSelection().getRangeAt(0).getBoundingClientRect().right)/2\n        var b = (this.myRef.current.getBoundingClientRect().left\n          + this.myRef.current.getBoundingClientRect().right)/2\n        return a - b\n      }\n  }\n\n  addVocab = () => {\n    console.log('Adding vocab for id: ', this.props.id)\n    const googleId = this.props.id\n    const vidId = '' //placeholder\n    const kanji = window.getSelection().toString()\n    const hiragana = this.state.tooltipText\n    const english = '' //placeholder\n\n    fetch(`http://localhost:4000/video_vocab?googleId=${googleId}&vidId=${vidId}&kanji=${kanji}&hiragana=${hiragana}&english=${english}`)\n    console.log('GoogleId: ', googleId, 'VidId: ', vidId, 'Kanji: ', kanji, 'Hiragana:', hiragana, 'English: ', english)\n  }\n\n  render() {\n    return (\n      <div ref={this.myRef} className=\"subtitle\" onClick={this.onHighlight}>\n\n        <div className='jp-sub'>\n          <p><span href=\"#\" id=\"jpSub\">{this.props.jpSub}</span></p>\n          <Tooltip\n            className='in'\n            placement='auto'\n            offset={this.tooltipOffset()}\n            isOpen={this.state.tooltipOpen}\n            autohide={false}\n            target=\"jpSub\"\n            toggle={this.toggle}\n            delay={{ \"show\": '0', \"hide\": '400' }}>\n            <div className=\"tooltip-div\">\n              {this.state.tooltipText}\n              <button onClick={this.addVocab}>Add to video deck!</button>\n            </div>\n          </Tooltip>\n        </div>\n\n        <br/>\n\n        <div className='eng-sub'>\n          {this.props.engSub}\n        </div>\n\n        <br/><br/>\n\n      </div>\n    )\n  }\n}\n\nexport default Subtitle\n"]},"metadata":{},"sourceType":"module"}