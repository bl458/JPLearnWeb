{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTransporter = void 0;\n\nconst gaxios_1 = require(\"gaxios\");\n\nconst options_1 = require(\"./options\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nconst pkg = require('../../package.json');\n\nconst PRODUCT_NAME = 'google-api-nodejs-client';\n\nlet DefaultTransporter =\n/** @class */\n(() => {\n  class DefaultTransporter {\n    /**\n     * Configures request options before making a request.\n     * @param opts GaxiosOptions options.\n     * @return Configured options.\n     */\n    configure(opts = {}) {\n      opts.headers = opts.headers || {};\n\n      if (typeof window === 'undefined') {\n        // set transporter user agent if not in browser\n        const uaValue = opts.headers['User-Agent'];\n\n        if (!uaValue) {\n          opts.headers['User-Agent'] = DefaultTransporter.USER_AGENT;\n        } else if (!uaValue.includes(`${PRODUCT_NAME}/`)) {\n          opts.headers['User-Agent'] = `${uaValue} ${DefaultTransporter.USER_AGENT}`;\n        } // track google-auth-library-nodejs version:\n\n\n        const authVersion = `auth/${pkg.version}`;\n\n        if (opts.headers['x-goog-api-client'] && !opts.headers['x-goog-api-client'].includes(authVersion)) {\n          opts.headers['x-goog-api-client'] = `${opts.headers['x-goog-api-client']} ${authVersion}`;\n        } else if (!opts.headers['x-goog-api-client']) {\n          const nodeVersion = process.version.replace(/^v/, '');\n          opts.headers['x-goog-api-client'] = `gl-node/${nodeVersion} ${authVersion}`;\n        }\n      }\n\n      return opts;\n    }\n\n    request(opts, callback) {\n      // ensure the user isn't passing in request-style options\n      opts = this.configure(opts);\n\n      try {\n        options_1.validate(opts);\n      } catch (e) {\n        if (callback) {\n          return callback(e);\n        } else {\n          throw e;\n        }\n      }\n\n      if (callback) {\n        gaxios_1.request(opts).then(r => {\n          callback(null, r);\n        }, e => {\n          callback(this.processError(e));\n        });\n      } else {\n        return gaxios_1.request(opts).catch(e => {\n          throw this.processError(e);\n        });\n      }\n    }\n    /**\n     * Changes the error to include details from the body.\n     */\n\n\n    processError(e) {\n      const res = e.response;\n      const err = e;\n      const body = res ? res.data : null;\n\n      if (res && body && body.error && res.status !== 200) {\n        if (typeof body.error === 'string') {\n          err.message = body.error;\n          err.code = res.status.toString();\n        } else if (Array.isArray(body.error.errors)) {\n          err.message = body.error.errors.map(err2 => err2.message).join('\\n');\n          err.code = body.error.code;\n          err.errors = body.error.errors;\n        } else {\n          err.message = body.error.message;\n          err.code = body.error.code || res.status;\n        }\n      } else if (res && res.status >= 400) {\n        // Consider all 4xx and 5xx responses errors.\n        err.message = body;\n        err.code = res.status.toString();\n      }\n\n      return err;\n    }\n\n  }\n  /**\n   * Default user agent.\n   */\n\n\n  DefaultTransporter.USER_AGENT = `${PRODUCT_NAME}/${pkg.version}`;\n  return DefaultTransporter;\n})();\n\nexports.DefaultTransporter = DefaultTransporter;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/client/node_modules/google-auth-library/build/src/transporters.js"],"names":["Object","defineProperty","exports","value","DefaultTransporter","gaxios_1","require","options_1","pkg","PRODUCT_NAME","configure","opts","headers","window","uaValue","USER_AGENT","includes","authVersion","version","nodeVersion","process","replace","request","callback","validate","e","then","r","processError","catch","res","response","err","body","data","error","status","message","code","toString","Array","isArray","errors","map","err2","join"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultTransporter = void 0;\nconst gaxios_1 = require(\"gaxios\");\nconst options_1 = require(\"./options\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\nconst PRODUCT_NAME = 'google-api-nodejs-client';\nlet DefaultTransporter = /** @class */ (() => {\n    class DefaultTransporter {\n        /**\n         * Configures request options before making a request.\n         * @param opts GaxiosOptions options.\n         * @return Configured options.\n         */\n        configure(opts = {}) {\n            opts.headers = opts.headers || {};\n            if (typeof window === 'undefined') {\n                // set transporter user agent if not in browser\n                const uaValue = opts.headers['User-Agent'];\n                if (!uaValue) {\n                    opts.headers['User-Agent'] = DefaultTransporter.USER_AGENT;\n                }\n                else if (!uaValue.includes(`${PRODUCT_NAME}/`)) {\n                    opts.headers['User-Agent'] = `${uaValue} ${DefaultTransporter.USER_AGENT}`;\n                }\n                // track google-auth-library-nodejs version:\n                const authVersion = `auth/${pkg.version}`;\n                if (opts.headers['x-goog-api-client'] &&\n                    !opts.headers['x-goog-api-client'].includes(authVersion)) {\n                    opts.headers['x-goog-api-client'] = `${opts.headers['x-goog-api-client']} ${authVersion}`;\n                }\n                else if (!opts.headers['x-goog-api-client']) {\n                    const nodeVersion = process.version.replace(/^v/, '');\n                    opts.headers['x-goog-api-client'] = `gl-node/${nodeVersion} ${authVersion}`;\n                }\n            }\n            return opts;\n        }\n        request(opts, callback) {\n            // ensure the user isn't passing in request-style options\n            opts = this.configure(opts);\n            try {\n                options_1.validate(opts);\n            }\n            catch (e) {\n                if (callback) {\n                    return callback(e);\n                }\n                else {\n                    throw e;\n                }\n            }\n            if (callback) {\n                gaxios_1.request(opts).then(r => {\n                    callback(null, r);\n                }, e => {\n                    callback(this.processError(e));\n                });\n            }\n            else {\n                return gaxios_1.request(opts).catch(e => {\n                    throw this.processError(e);\n                });\n            }\n        }\n        /**\n         * Changes the error to include details from the body.\n         */\n        processError(e) {\n            const res = e.response;\n            const err = e;\n            const body = res ? res.data : null;\n            if (res && body && body.error && res.status !== 200) {\n                if (typeof body.error === 'string') {\n                    err.message = body.error;\n                    err.code = res.status.toString();\n                }\n                else if (Array.isArray(body.error.errors)) {\n                    err.message = body.error.errors\n                        .map((err2) => err2.message)\n                        .join('\\n');\n                    err.code = body.error.code;\n                    err.errors = body.error.errors;\n                }\n                else {\n                    err.message = body.error.message;\n                    err.code = body.error.code || res.status;\n                }\n            }\n            else if (res && res.status >= 400) {\n                // Consider all 4xx and 5xx responses errors.\n                err.message = body;\n                err.code = res.status.toString();\n            }\n            return err;\n        }\n    }\n    /**\n     * Default user agent.\n     */\n    DefaultTransporter.USER_AGENT = `${PRODUCT_NAME}/${pkg.version}`;\n    return DefaultTransporter;\n})();\nexports.DefaultTransporter = DefaultTransporter;\n//# sourceMappingURL=transporters.js.map"]},"metadata":{},"sourceType":"script"}