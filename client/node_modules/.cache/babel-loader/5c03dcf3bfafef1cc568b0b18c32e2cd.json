{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar CharacterDefinition = require(\"../CharacterDefinition\");\n\nvar InvokeDefinitionMap = require(\"../InvokeDefinitionMap\");\n\nvar CATEGORY_DEF_PATTERN = /^(\\w+)\\s+(\\d)\\s+(\\d)\\s+(\\d)/;\nvar CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\nvar RANGE_CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})\\.\\.(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\n/**\n * CharacterDefinitionBuilder\n * @constructor\n */\n\nfunction CharacterDefinitionBuilder() {\n  this.char_def = new CharacterDefinition();\n  this.char_def.invoke_definition_map = new InvokeDefinitionMap();\n  this.character_category_definition = [];\n  this.category_mapping = [];\n}\n\nCharacterDefinitionBuilder.prototype.putLine = function (line) {\n  var parsed_category_def = CATEGORY_DEF_PATTERN.exec(line);\n\n  if (parsed_category_def != null) {\n    var class_id = this.character_category_definition.length;\n    var char_class = CharacterDefinition.parseCharCategory(class_id, parsed_category_def);\n\n    if (char_class == null) {\n      return;\n    }\n\n    this.character_category_definition.push(char_class);\n    return;\n  }\n\n  var parsed_category_mapping = CATEGORY_MAPPING_PATTERN.exec(line);\n\n  if (parsed_category_mapping != null) {\n    var mapping = CharacterDefinition.parseCategoryMapping(parsed_category_mapping);\n    this.category_mapping.push(mapping);\n  }\n\n  var parsed_range_category_mapping = RANGE_CATEGORY_MAPPING_PATTERN.exec(line);\n\n  if (parsed_range_category_mapping != null) {\n    var range_mapping = CharacterDefinition.parseRangeCategoryMapping(parsed_range_category_mapping);\n    this.category_mapping.push(range_mapping);\n  }\n};\n\nCharacterDefinitionBuilder.prototype.build = function () {\n  // TODO If DEFAULT category does not exist, throw error\n  this.char_def.invoke_definition_map.init(this.character_category_definition);\n  this.char_def.initCategoryMappings(this.category_mapping);\n  return this.char_def;\n};\n\nmodule.exports = CharacterDefinitionBuilder;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/node_modules/kuromoji/src/dict/builder/CharacterDefinitionBuilder.js"],"names":["CharacterDefinition","require","InvokeDefinitionMap","CATEGORY_DEF_PATTERN","CATEGORY_MAPPING_PATTERN","RANGE_CATEGORY_MAPPING_PATTERN","CharacterDefinitionBuilder","char_def","invoke_definition_map","character_category_definition","category_mapping","prototype","putLine","line","parsed_category_def","exec","class_id","length","char_class","parseCharCategory","push","parsed_category_mapping","mapping","parseCategoryMapping","parsed_range_category_mapping","range_mapping","parseRangeCategoryMapping","build","init","initCategoryMappings","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,wBAAD,CAAjC;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,wBAAD,CAAjC;;AAEA,IAAIE,oBAAoB,GAAG,6BAA3B;AACA,IAAIC,wBAAwB,GAAG,mDAA/B;AACA,IAAIC,8BAA8B,GAAG,sEAArC;AAEA;;;;;AAIA,SAASC,0BAAT,GAAsC;AAClC,OAAKC,QAAL,GAAgB,IAAIP,mBAAJ,EAAhB;AACA,OAAKO,QAAL,CAAcC,qBAAd,GAAsC,IAAIN,mBAAJ,EAAtC;AACA,OAAKO,6BAAL,GAAqC,EAArC;AACA,OAAKC,gBAAL,GAAwB,EAAxB;AACH;;AAEDJ,0BAA0B,CAACK,SAA3B,CAAqCC,OAArC,GAA+C,UAAUC,IAAV,EAAgB;AAC3D,MAAIC,mBAAmB,GAAGX,oBAAoB,CAACY,IAArB,CAA0BF,IAA1B,CAA1B;;AACA,MAAIC,mBAAmB,IAAI,IAA3B,EAAiC;AAC7B,QAAIE,QAAQ,GAAG,KAAKP,6BAAL,CAAmCQ,MAAlD;AACA,QAAIC,UAAU,GAAGlB,mBAAmB,CAACmB,iBAApB,CAAsCH,QAAtC,EAAgDF,mBAAhD,CAAjB;;AACA,QAAII,UAAU,IAAI,IAAlB,EAAwB;AACpB;AACH;;AACD,SAAKT,6BAAL,CAAmCW,IAAnC,CAAwCF,UAAxC;AACA;AACH;;AACD,MAAIG,uBAAuB,GAAGjB,wBAAwB,CAACW,IAAzB,CAA8BF,IAA9B,CAA9B;;AACA,MAAIQ,uBAAuB,IAAI,IAA/B,EAAqC;AACjC,QAAIC,OAAO,GAAGtB,mBAAmB,CAACuB,oBAApB,CAAyCF,uBAAzC,CAAd;AACA,SAAKX,gBAAL,CAAsBU,IAAtB,CAA2BE,OAA3B;AACH;;AACD,MAAIE,6BAA6B,GAAGnB,8BAA8B,CAACU,IAA/B,CAAoCF,IAApC,CAApC;;AACA,MAAIW,6BAA6B,IAAI,IAArC,EAA2C;AACvC,QAAIC,aAAa,GAAGzB,mBAAmB,CAAC0B,yBAApB,CAA8CF,6BAA9C,CAApB;AACA,SAAKd,gBAAL,CAAsBU,IAAtB,CAA2BK,aAA3B;AACH;AACJ,CArBD;;AAuBAnB,0BAA0B,CAACK,SAA3B,CAAqCgB,KAArC,GAA6C,YAAY;AACrD;AACA,OAAKpB,QAAL,CAAcC,qBAAd,CAAoCoB,IAApC,CAAyC,KAAKnB,6BAA9C;AACA,OAAKF,QAAL,CAAcsB,oBAAd,CAAmC,KAAKnB,gBAAxC;AACA,SAAO,KAAKH,QAAZ;AACH,CALD;;AAOAuB,MAAM,CAACC,OAAP,GAAiBzB,0BAAjB","sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar CharacterDefinition = require(\"../CharacterDefinition\");\nvar InvokeDefinitionMap = require(\"../InvokeDefinitionMap\");\n\nvar CATEGORY_DEF_PATTERN = /^(\\w+)\\s+(\\d)\\s+(\\d)\\s+(\\d)/;\nvar CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\nvar RANGE_CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})\\.\\.(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\n\n/**\n * CharacterDefinitionBuilder\n * @constructor\n */\nfunction CharacterDefinitionBuilder() {\n    this.char_def = new CharacterDefinition();\n    this.char_def.invoke_definition_map = new InvokeDefinitionMap();\n    this.character_category_definition = [];\n    this.category_mapping = [];\n}\n\nCharacterDefinitionBuilder.prototype.putLine = function (line) {\n    var parsed_category_def = CATEGORY_DEF_PATTERN.exec(line);\n    if (parsed_category_def != null) {\n        var class_id = this.character_category_definition.length;\n        var char_class = CharacterDefinition.parseCharCategory(class_id, parsed_category_def);\n        if (char_class == null) {\n            return;\n        }\n        this.character_category_definition.push(char_class);\n        return;\n    }\n    var parsed_category_mapping = CATEGORY_MAPPING_PATTERN.exec(line);\n    if (parsed_category_mapping != null) {\n        var mapping = CharacterDefinition.parseCategoryMapping(parsed_category_mapping);\n        this.category_mapping.push(mapping);\n    }\n    var parsed_range_category_mapping = RANGE_CATEGORY_MAPPING_PATTERN.exec(line);\n    if (parsed_range_category_mapping != null) {\n        var range_mapping = CharacterDefinition.parseRangeCategoryMapping(parsed_range_category_mapping);\n        this.category_mapping.push(range_mapping);\n    }\n};\n\nCharacterDefinitionBuilder.prototype.build = function () {\n    // TODO If DEFAULT category does not exist, throw error\n    this.char_def.invoke_definition_map.init(this.character_category_definition);\n    this.char_def.initCategoryMappings(this.category_mapping);\n    return this.char_def;\n};\n\nmodule.exports = CharacterDefinitionBuilder;\n"]},"metadata":{},"sourceType":"script"}