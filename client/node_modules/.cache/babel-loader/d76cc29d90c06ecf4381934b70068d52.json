{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar zlib = require(\"zlibjs/bin/gunzip.min.js\");\n\nvar DictionaryLoader = require(\"./DictionaryLoader\");\n/**\n * BrowserDictionaryLoader inherits DictionaryLoader, using jQuery XHR for download\n * @param {string} dic_path Dictionary path\n * @constructor\n */\n\n\nfunction BrowserDictionaryLoader(dic_path) {\n  DictionaryLoader.apply(this, [dic_path]);\n}\n\nBrowserDictionaryLoader.prototype = Object.create(DictionaryLoader.prototype);\n/**\n * Utility function to load gzipped dictionary\n * @param {string} url Dictionary URL\n * @param {BrowserDictionaryLoader~onLoad} callback Callback function\n */\n\nBrowserDictionaryLoader.prototype.loadArrayBuffer = function (url, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", url, true);\n  xhr.responseType = \"arraybuffer\";\n\n  xhr.onload = function () {\n    if (this.status > 0 && this.status !== 200) {\n      callback(xhr.statusText, null);\n      return;\n    }\n\n    var arraybuffer = this.response;\n    var gz = new zlib.Zlib.Gunzip(new Uint8Array(arraybuffer));\n    var typed_array = gz.decompress();\n    callback(null, typed_array.buffer);\n  };\n\n  xhr.onerror = function (err) {\n    callback(err, null);\n  };\n\n  xhr.send();\n};\n/**\n * Callback\n * @callback BrowserDictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {Uint8Array} buffer Loaded buffer\n */\n\n\nmodule.exports = BrowserDictionaryLoader;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/client/node_modules/kuromoji/src/loader/BrowserDictionaryLoader.js"],"names":["zlib","require","DictionaryLoader","BrowserDictionaryLoader","dic_path","apply","prototype","Object","create","loadArrayBuffer","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","statusText","arraybuffer","response","gz","Zlib","Gunzip","Uint8Array","typed_array","decompress","buffer","onerror","err","send","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,0BAAD,CAAlB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAA9B;AAEA;;;;;;;AAKA,SAASE,uBAAT,CAAiCC,QAAjC,EAA2C;AACvCF,EAAAA,gBAAgB,CAACG,KAAjB,CAAuB,IAAvB,EAA6B,CAACD,QAAD,CAA7B;AACH;;AAEDD,uBAAuB,CAACG,SAAxB,GAAoCC,MAAM,CAACC,MAAP,CAAcN,gBAAgB,CAACI,SAA/B,CAApC;AAEA;;;;;;AAKAH,uBAAuB,CAACG,SAAxB,CAAkCG,eAAlC,GAAoD,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AACzE,MAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBJ,GAAhB,EAAqB,IAArB;AACAE,EAAAA,GAAG,CAACG,YAAJ,GAAmB,aAAnB;;AACAH,EAAAA,GAAG,CAACI,MAAJ,GAAa,YAAY;AACrB,QAAI,KAAKC,MAAL,GAAc,CAAd,IAAmB,KAAKA,MAAL,KAAgB,GAAvC,EAA4C;AACxCN,MAAAA,QAAQ,CAACC,GAAG,CAACM,UAAL,EAAiB,IAAjB,CAAR;AACA;AACH;;AACD,QAAIC,WAAW,GAAG,KAAKC,QAAvB;AAEA,QAAIC,EAAE,GAAG,IAAIrB,IAAI,CAACsB,IAAL,CAAUC,MAAd,CAAqB,IAAIC,UAAJ,CAAeL,WAAf,CAArB,CAAT;AACA,QAAIM,WAAW,GAAGJ,EAAE,CAACK,UAAH,EAAlB;AACAf,IAAAA,QAAQ,CAAC,IAAD,EAAOc,WAAW,CAACE,MAAnB,CAAR;AACH,GAVD;;AAWAf,EAAAA,GAAG,CAACgB,OAAJ,GAAc,UAAUC,GAAV,EAAe;AACzBlB,IAAAA,QAAQ,CAACkB,GAAD,EAAM,IAAN,CAAR;AACH,GAFD;;AAGAjB,EAAAA,GAAG,CAACkB,IAAJ;AACH,CAnBD;AAqBA;;;;;;;;AAOAC,MAAM,CAACC,OAAP,GAAiB7B,uBAAjB","sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar zlib = require(\"zlibjs/bin/gunzip.min.js\");\nvar DictionaryLoader = require(\"./DictionaryLoader\");\n\n/**\n * BrowserDictionaryLoader inherits DictionaryLoader, using jQuery XHR for download\n * @param {string} dic_path Dictionary path\n * @constructor\n */\nfunction BrowserDictionaryLoader(dic_path) {\n    DictionaryLoader.apply(this, [dic_path]);\n}\n\nBrowserDictionaryLoader.prototype = Object.create(DictionaryLoader.prototype);\n\n/**\n * Utility function to load gzipped dictionary\n * @param {string} url Dictionary URL\n * @param {BrowserDictionaryLoader~onLoad} callback Callback function\n */\nBrowserDictionaryLoader.prototype.loadArrayBuffer = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"arraybuffer\";\n    xhr.onload = function () {\n        if (this.status > 0 && this.status !== 200) {\n            callback(xhr.statusText, null);\n            return;\n        }\n        var arraybuffer = this.response;\n\n        var gz = new zlib.Zlib.Gunzip(new Uint8Array(arraybuffer));\n        var typed_array = gz.decompress();\n        callback(null, typed_array.buffer);\n    };\n    xhr.onerror = function (err) {\n        callback(err, null);\n    };\n    xhr.send();\n};\n\n/**\n * Callback\n * @callback BrowserDictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {Uint8Array} buffer Loaded buffer\n */\n\nmodule.exports = BrowserDictionaryLoader;\n"]},"metadata":{},"sourceType":"script"}