{"ast":null,"code":"var _jsxFileName = \"/home/byungchan/Projects/react/JapaneseQuiz/client/src/progress/Progress.js\";\nimport React, { Component } from 'react';\nimport DeckSelection from './DeckSelection';\nimport DeckProgress from './DeckProgress';\n\nclass Progress extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pDeck: 'N1',\n      // Deck that user chose to view progress\n      pDeckSize: 0,\n      pBank: [],\n      // Deck progress array. List of words that have already been seen in quiz. [{google_id: _, deck: _, word: _}, ...]\n      showP: 0 // Show deck progress if 1. Show deck selection page if 0\n\n    };\n\n    this.onGoBack = () => this.setState({\n      pDeck: 'N1',\n      pDeckSize: 0,\n      pBank: [],\n      showP: 0\n    });\n\n    this.onPDeckChange = e => {\n      this.setState({\n        pDeck: e.target.value\n      });\n    };\n\n    this.setPDeckSize = () => {\n      if (this.state.pDeck === 'N1' || this.state.pDeck === 'N2' || this.state.pDeck === 'review' || this.state.pDeck === 'video_vocab') {\n        fetch(`http://localhost:4000/load_deck?deck=${this.state.pDeck}`).then(response => response.json()).then(response => {\n          this.setState({\n            pDeckSize: response.data.length\n          });\n        });\n      } else {\n        console.log('Not a valid deck');\n      }\n    };\n\n    this.onCheck = () => {\n      fetch(`http://localhost:4000/view_progress?googleId='${this.props.id}'&deck='${this.state.pDeck}'`).then(response => response.json()).then(json => this.setState({\n        pBank: json.data,\n        showP: 1\n      }));\n      this.setPDeckSize();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, this.state.showP === 0 && /*#__PURE__*/React.createElement(DeckSelection, {\n      onPDeckChange: this.onPDeckChange,\n      onCheck: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), this.state.showP === 1 && /*#__PURE__*/React.createElement(DeckProgress, {\n      pDeck: this.state.pDeck,\n      pDeckSize: this.state.pDeckSize,\n      pBank: this.state.pBank,\n      onGoBack: this.onGoBack,\n      displayDeckName: this.props.displayDeckName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Progress;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/client/src/progress/Progress.js"],"names":["React","Component","DeckSelection","DeckProgress","Progress","state","pDeck","pDeckSize","pBank","showP","onGoBack","setState","onPDeckChange","e","target","value","setPDeckSize","fetch","then","response","json","data","length","console","log","onCheck","props","id","render","displayDeckName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACNC,MAAAA,KAAK,EAAE,IADD;AACO;AACbC,MAAAA,SAAS,EAAE,CAFL;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAGK;AACXC,MAAAA,KAAK,EAAE,CAJD,CAIG;;AAJH,KADuB;;AAAA,SAQ/BC,QAR+B,GAQpB,MAAM,KAAKC,QAAL,CAAc;AAC7BL,MAAAA,KAAK,EAAE,IADsB;AAE7BC,MAAAA,SAAS,EAAE,CAFkB;AAG7BC,MAAAA,KAAK,EAAE,EAHsB;AAI7BC,MAAAA,KAAK,EAAE;AAJsB,KAAd,CARc;;AAAA,SAe/BG,aAf+B,GAedC,CAAD,IAAO;AACrB,WAAKF,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAEO,CAAC,CAACC,MAAF,CAASC;AADJ,OAAd;AAGD,KAnB8B;;AAAA,SAqB/BC,YArB+B,GAqBhB,MAAM;AACnB,UAAI,KAAKX,KAAL,CAAWC,KAAX,KAAmB,IAAnB,IAA2B,KAAKD,KAAL,CAAWC,KAAX,KAAmB,IAA9C,IAAsD,KAAKD,KAAL,CAAWC,KAAX,KAAmB,QAAzE,IAAqF,KAAKD,KAAL,CAAWC,KAAX,KAAmB,aAA5G,EAA2H;AACzHW,QAAAA,KAAK,CAAE,wCAAuC,KAAKZ,KAAL,CAAWC,KAAM,EAA1D,CAAL,CACCY,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;AAChB,eAAKR,QAAL,CAAc;AAACJ,YAAAA,SAAS,EAAEY,QAAQ,CAACE,IAAT,CAAcC;AAA1B,WAAd;AACD,SAJD;AAKD,OAND,MAOK;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,KAhC8B;;AAAA,SAkC/BC,OAlC+B,GAkCrB,MAAM;AACdR,MAAAA,KAAK,CAAE,iDAAgD,KAAKS,KAAL,CAAWC,EAAG,WAAU,KAAKtB,KAAL,CAAWC,KAAM,GAA3F,CAAL,CACCY,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAU,KAAKT,QAAL,CAAc;AAC5BH,QAAAA,KAAK,EAAEY,IAAI,CAACC,IADgB;AAE5BZ,QAAAA,KAAK,EAAE;AAFqB,OAAd,CAFhB;AAMA,WAAKO,YAAL;AACD,KA1C8B;AAAA;;AA4C/BY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvB,KAAL,CAAWI,KAAX,KAAmB,CAAnB,iBACC,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,KAAKG,aADtB;AAEE,MAAA,OAAO,EAAE,KAAKa,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAOG,KAAKpB,KAAL,CAAWI,KAAX,KAAmB,CAAnB,iBACC,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KADpB;AAEE,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAFxB;AAGE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKE,QAJjB;AAKE,MAAA,eAAe,EAAE,KAAKgB,KAAL,CAAWG,eAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADF,CADF;AAqBD;;AAlE8B;;AAqEjC,eAAezB,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport DeckSelection from './DeckSelection'\nimport DeckProgress from './DeckProgress'\n\nclass Progress extends Component {\n  state = {\n    pDeck: 'N1', // Deck that user chose to view progress\n    pDeckSize: 0,\n    pBank: [], // Deck progress array. List of words that have already been seen in quiz. [{google_id: _, deck: _, word: _}, ...]\n    showP: 0 // Show deck progress if 1. Show deck selection page if 0\n  }\n\n  onGoBack = () => this.setState({\n    pDeck: 'N1',\n    pDeckSize: 0,\n    pBank: [],\n    showP: 0,\n  })\n\n  onPDeckChange = (e) => {\n    this.setState({\n      pDeck: e.target.value\n    })\n  }\n\n  setPDeckSize = () => {\n    if (this.state.pDeck==='N1' || this.state.pDeck==='N2' || this.state.pDeck==='review' || this.state.pDeck==='video_vocab') {\n      fetch(`http://localhost:4000/load_deck?deck=${this.state.pDeck}`)\n      .then(response => response.json())\n      .then(response => {\n        this.setState({pDeckSize: response.data.length})\n      })\n    }\n    else {\n      console.log('Not a valid deck')\n    }\n  }\n\n  onCheck = () => {\n    fetch(`http://localhost:4000/view_progress?googleId='${this.props.id}'&deck='${this.state.pDeck}'`)\n    .then((response) => response.json())\n    .then((json) => this.setState({\n      pBank: json.data,\n      showP: 1\n    }))\n    this.setPDeckSize()\n  }\n\n  render() {\n    return (\n      <div className=\"quiz-board\">\n        <div className=\"quiz-inner\">\n          {this.state.showP===0 &&\n            <DeckSelection\n              onPDeckChange={this.onPDeckChange}\n              onCheck={this.onCheck}\n            />\n          }\n          {this.state.showP===1 &&\n            <DeckProgress\n              pDeck={this.state.pDeck}\n              pDeckSize={this.state.pDeckSize}\n              pBank={this.state.pBank}\n              onGoBack={this.onGoBack}\n              displayDeckName={this.props.displayDeckName}\n            />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Progress\n"]},"metadata":{},"sourceType":"module"}