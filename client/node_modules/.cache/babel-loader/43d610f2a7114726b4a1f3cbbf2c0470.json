{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\n\nvar CharacterDefinition = require(\"./CharacterDefinition\");\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n/**\n * UnknownDictionary\n * @constructor\n */\n\n\nfunction UnknownDictionary() {\n  this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n  this.target_map = {}; // class_id (of CharacterClass) -> token_info_id (of unknown class)\n\n  this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n  this.character_definition = null;\n} // Inherit from TokenInfoDictionary as a super class\n\n\nUnknownDictionary.prototype = Object.create(TokenInfoDictionary.prototype);\n\nUnknownDictionary.prototype.characterDefinition = function (character_definition) {\n  this.character_definition = character_definition;\n  return this;\n};\n\nUnknownDictionary.prototype.lookup = function (ch) {\n  return this.character_definition.lookup(ch);\n};\n\nUnknownDictionary.prototype.lookupCompatibleCategory = function (ch) {\n  return this.character_definition.lookupCompatibleCategory(ch);\n};\n\nUnknownDictionary.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n  this.loadDictionary(unk_buffer);\n  this.loadPosVector(unk_pos_buffer);\n  this.loadTargetMap(unk_map_buffer);\n  this.character_definition = CharacterDefinition.load(cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n};\n\nmodule.exports = UnknownDictionary;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/node_modules/kuromoji/src/dict/UnknownDictionary.js"],"names":["TokenInfoDictionary","require","CharacterDefinition","ByteBuffer","UnknownDictionary","dictionary","target_map","pos_buffer","character_definition","prototype","Object","create","characterDefinition","lookup","ch","lookupCompatibleCategory","loadUnknownDictionaries","unk_buffer","unk_pos_buffer","unk_map_buffer","cat_map_buffer","compat_cat_map_buffer","invoke_def_buffer","loadDictionary","loadPosVector","loadTargetMap","load","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,oBAAD,CAAxB;AAEA;;;;;;AAIA,SAASG,iBAAT,GAA6B;AACzB,OAAKC,UAAL,GAAkB,IAAIF,UAAJ,CAAe,KAAK,IAAL,GAAY,IAA3B,CAAlB;AACA,OAAKG,UAAL,GAAkB,EAAlB,CAFyB,CAEF;;AACvB,OAAKC,UAAL,GAAkB,IAAIJ,UAAJ,CAAe,KAAK,IAAL,GAAY,IAA3B,CAAlB;AACA,OAAKK,oBAAL,GAA4B,IAA5B;AACH,C,CAED;;;AACAJ,iBAAiB,CAACK,SAAlB,GAA8BC,MAAM,CAACC,MAAP,CAAcX,mBAAmB,CAACS,SAAlC,CAA9B;;AAEAL,iBAAiB,CAACK,SAAlB,CAA4BG,mBAA5B,GAAkD,UAAUJ,oBAAV,EAAgC;AAC9E,OAAKA,oBAAL,GAA4BA,oBAA5B;AACA,SAAO,IAAP;AACH,CAHD;;AAKAJ,iBAAiB,CAACK,SAAlB,CAA4BI,MAA5B,GAAqC,UAAUC,EAAV,EAAc;AAC/C,SAAO,KAAKN,oBAAL,CAA0BK,MAA1B,CAAiCC,EAAjC,CAAP;AACH,CAFD;;AAIAV,iBAAiB,CAACK,SAAlB,CAA4BM,wBAA5B,GAAuD,UAAUD,EAAV,EAAc;AACjE,SAAO,KAAKN,oBAAL,CAA0BO,wBAA1B,CAAmDD,EAAnD,CAAP;AACH,CAFD;;AAIAV,iBAAiB,CAACK,SAAlB,CAA4BO,uBAA5B,GAAsD,UAAUC,UAAV,EAAsBC,cAAtB,EAAsCC,cAAtC,EAAsDC,cAAtD,EAAsEC,qBAAtE,EAA6FC,iBAA7F,EAAgH;AAClK,OAAKC,cAAL,CAAoBN,UAApB;AACA,OAAKO,aAAL,CAAmBN,cAAnB;AACA,OAAKO,aAAL,CAAmBN,cAAnB;AACA,OAAKX,oBAAL,GAA4BN,mBAAmB,CAACwB,IAApB,CAAyBN,cAAzB,EAAyCC,qBAAzC,EAAgEC,iBAAhE,CAA5B;AACH,CALD;;AAOAK,MAAM,CAACC,OAAP,GAAiBxB,iBAAjB","sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\nvar CharacterDefinition = require(\"./CharacterDefinition\");\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n\n/**\n * UnknownDictionary\n * @constructor\n */\nfunction UnknownDictionary() {\n    this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n    this.target_map = {};  // class_id (of CharacterClass) -> token_info_id (of unknown class)\n    this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n    this.character_definition = null;\n}\n\n// Inherit from TokenInfoDictionary as a super class\nUnknownDictionary.prototype = Object.create(TokenInfoDictionary.prototype);\n\nUnknownDictionary.prototype.characterDefinition = function (character_definition) {\n    this.character_definition = character_definition;\n    return this;\n};\n\nUnknownDictionary.prototype.lookup = function (ch) {\n    return this.character_definition.lookup(ch);\n};\n\nUnknownDictionary.prototype.lookupCompatibleCategory = function (ch) {\n    return this.character_definition.lookupCompatibleCategory(ch);\n};\n\nUnknownDictionary.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    this.loadDictionary(unk_buffer);\n    this.loadPosVector(unk_pos_buffer);\n    this.loadTargetMap(unk_map_buffer);\n    this.character_definition = CharacterDefinition.load(cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n};\n\nmodule.exports = UnknownDictionary;\n"]},"metadata":{},"sourceType":"script"}