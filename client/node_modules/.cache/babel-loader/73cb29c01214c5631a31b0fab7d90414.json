{"ast":null,"code":"var _jsxFileName = \"/home/byungchan/Projects/react/JapaneseQuiz/client/src/quiz/Quiz.js\";\nimport React, { Component } from 'react';\nimport './Quiz.css';\nimport QuizStart from './QuizStart';\nimport QuizState from './QuizState';\nimport QuizResult from './QuizResult';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: 0,\n      //Start page: 0, In-game: 1, Results page: 2\n      deck: 'N1',\n      numberq: 1,\n      //Total number of questions in the quiz (min 1, max 10)\n      score: 0,\n      qBank: [{\n        kanji: \"\",\n        hiragana: \"\",\n        english: \"\"\n      }],\n      // question bank for each game\n      rQBank: [{\n        kanji: \"\",\n        hiragana: \"\",\n        english: \"\"\n      }],\n      // review question bank\n      cRQBank: [{\n        kanji: \"\",\n        hiragana: \"\",\n        english: \"\"\n      }],\n      answer: '',\n      questionPage: 0,\n      //Question Page: 0, Answer page: 1\n      firstReview: 1 //Review mode for the first time or naw\n\n    };\n\n    this.changePlaying = quizPlaying => {\n      this.setState({\n        playing: quizPlaying\n      });\n    };\n\n    this.selectRandomArr = (arr, count) => {\n      return Promise.resolve(arr.sort(() => 0.5 - Math.random()).slice(0, count));\n    };\n\n    this.getQuestions = () => {\n      if (this.state.deck === 'N1' || this.state.deck === 'N2' || this.state.deck === 'review' || this.state.deck === 'video_vocab') {\n        fetch(`http://localhost:4000/load_deck?deck=${this.state.deck}`).then(response => response.json()).then(response => this.selectRandomArr(response.data, 10)).then(questions => {\n          this.setState({\n            qBank: questions.slice(0, this.state.numberq)\n          });\n        });\n      } //\n      else {\n          console.log('Not a valid deck');\n        }\n    };\n\n    this.onNumberqChange = newNumberq => this.setState({\n      numberq: newNumberq.target.value > 0 && newNumberq.target.value < 10 ? newNumberq.target.value : 10\n    });\n\n    this.onDeckChange = newDeck => this.setState({\n      deck: newDeck.target.value\n    });\n\n    this.onAnswerChange = newAnswer => this.setState({\n      answer: newAnswer.target.value\n    });\n\n    this.onStart = () => {\n      this.getQuestions();\n      this.setState({\n        score: 0,\n        playing: this.state.playing === 0 ? 1 : 0,\n        questionPage: 0\n      });\n      console.log(\"Finished onStart. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length); // console.log('Quiz id: ', this.props.id)\n    };\n\n    this.onAgain = () => {\n      this.setState({\n        qBank: [{\n          kanji: \"\",\n          hiragana: \"\",\n          english: \"\"\n        }],\n        rQBank: [{\n          kanji: \"\",\n          hiragana: \"\",\n          english: \"\"\n        }],\n        cRQBank: [{\n          kanji: \"\",\n          hiragana: \"\",\n          english: \"\"\n        }],\n        score: 0,\n        playing: this.state.playing === 0 ? 1 : 0,\n        firstReview: 1\n      });\n      console.log(\"Finished onAgain. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length);\n    };\n\n    this.onReview = () => {\n      var rQBank_cp = this.state.rQBank;\n      rQBank_cp.splice(0, 1);\n      this.setState({\n        numberq: this.state.firstReview === 1 ? this.state.rQBank.length : this.state.cRQBank.length,\n        cRQBank: this.state.firstReview === 1 ? JSON.parse(JSON.stringify(this.state.rQBank)) : JSON.parse(JSON.stringify(this.state.cRQBank)),\n        qBank: this.state.firstReview === 1 ? JSON.parse(JSON.stringify(this.state.rQBank)) : JSON.parse(JSON.stringify(this.state.cRQBank)),\n        score: 0,\n        playing: 1,\n        firstReview: 0,\n        rQBank: [{\n          kanji: \"\",\n          hiragana: \"\",\n          english: \"\"\n        }]\n      });\n      console.log(this.state.cRQBank);\n    };\n\n    this.onSubmit = () => {\n      console.log(\"Started onSubmit. qBank: \" + this.state.qBank.length); // Updates score, shows answer\n\n      this.setState({\n        score: this.state.qBank[0].hiragana === this.state.answer.trim() ? this.state.score + 1 : this.state.score,\n        questionPage: 1,\n        rQBank: this.state.qBank[0].hiragana === this.state.answer.trim() ? this.state.rQBank : [...this.state.rQBank, this.state.qBank[0]]\n      }); // Add wrong answer to review deck in db when you're not playing quiz with the review deck\n\n      if (this.state.qBank[0].hiragana !== this.state.answer.trim() && this.state.deck !== 'review') {\n        fetch(`http://localhost:4000/review?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}&hiragana=${this.state.qBank[0].hiragana}&english=${this.state.qBank[0].english}`);\n      } // Add to deck progress in db\n\n\n      fetch(`http://localhost:4000/progress?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}`);\n      console.log(\"Finished onSubmit. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length + \" rQBank: \" + this.state.rQBank.length);\n    };\n\n    this.onSkip = () => {\n      // Shows answer\n      this.setState({\n        questionPage: 1,\n        rQBank: [...this.state.rQBank, this.state.qBank[0]]\n      });\n      fetch(`http://localhost:4000/review?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}&hiragana=${this.state.qBank[0].hiragana}&english=${this.state.qBank[0].english}`);\n      fetch(`http://localhost:4000/progress?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}`);\n    };\n\n    this.onEnterPress = (func, e) => {\n      var code = e.keyCode || e.which;\n\n      if (code === 13) {\n        func();\n      }\n    };\n\n    this.onNext = () => {\n      // Updates question, resets answer-input value\n      var qBank_cp = this.state.qBank;\n      qBank_cp.splice(0, 1);\n      this.setState({\n        qBank: qBank_cp,\n        answer: '',\n        questionPage: 0,\n        // Back to question\n        playing: this.state.qBank.length === 0 ? 2 : this.state.playing // If user answered all, quit quiz\n\n      });\n    };\n  }\n\n  /*Actual rendering from here*/\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, \"Quiz\"), this.state.playing === 0 && /*#__PURE__*/React.createElement(QuizStart, {\n      numberq: this.state.numberq,\n      onNumberqChange: this.onNumberqChange,\n      deck: this.state.deck,\n      onDeckChange: this.onDeckChange,\n      onStart: this.onStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), this.state.playing === 1 && /*#__PURE__*/React.createElement(QuizState, {\n      qBank: this.state.qBank,\n      numberq: this.state.numberq,\n      deck: this.state.deck,\n      answer: this.state.answer,\n      questionPage: this.state.questionPage,\n      onSubmit: this.onSubmit,\n      onSkip: this.onSkip,\n      onAnswerChange: this.onAnswerChange,\n      onEnterPress: this.onEnterPress,\n      onNext: this.onNext,\n      displayDeckName: this.props.displayDeckName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }), this.state.playing === 2 && /*#__PURE__*/React.createElement(QuizResult, {\n      score: this.state.score,\n      numberq: this.state.numberq,\n      playAgain: this.onAgain,\n      review: this.onReview,\n      firstReview: this.state.firstReview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/byungchan/Projects/react/JapaneseQuiz/client/src/quiz/Quiz.js"],"names":["React","Component","QuizStart","QuizState","QuizResult","Quiz","state","playing","deck","numberq","score","qBank","kanji","hiragana","english","rQBank","cRQBank","answer","questionPage","firstReview","changePlaying","quizPlaying","setState","selectRandomArr","arr","count","Promise","resolve","sort","Math","random","slice","getQuestions","fetch","then","response","json","data","questions","console","log","onNumberqChange","newNumberq","target","value","onDeckChange","newDeck","onAnswerChange","newAnswer","onStart","length","onAgain","onReview","rQBank_cp","splice","JSON","parse","stringify","onSubmit","trim","props","id","onSkip","onEnterPress","func","e","code","keyCode","which","onNext","qBank_cp","render","displayDeckName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './Quiz.css'\nimport QuizStart from './QuizStart'\nimport QuizState from './QuizState'\nimport QuizResult from './QuizResult'\n\nclass Quiz extends Component {\n  state={\n    playing: 0, //Start page: 0, In-game: 1, Results page: 2\n    deck: 'N1',\n    numberq: 1, //Total number of questions in the quiz (min 1, max 10)\n    score: 0,\n    qBank: [{kanji:\"\",hiragana:\"\",english:\"\"}], // question bank for each game\n    rQBank: [{kanji:\"\",hiragana:\"\",english:\"\"}], // review question bank\n    cRQBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n    answer: '',\n    questionPage: 0, //Question Page: 0, Answer page: 1\n    firstReview: 1 //Review mode for the first time or naw\n  }\n\n  changePlaying = (quizPlaying) => {\n    this.setState({\n      playing: quizPlaying\n    })\n  }\n\n  selectRandomArr = (arr, count) => {\n    return Promise.resolve(arr.sort(() => 0.5 - Math.random()).slice(0, count))\n  }\n\n  getQuestions = () => {\n    if (this.state.deck==='N1' || this.state.deck==='N2' || this.state.deck==='review' || this.state.deck==='video_vocab') {\n      fetch(`http://localhost:4000/load_deck?deck=${this.state.deck}`)\n      .then(response => response.json())\n      .then(response => this.selectRandomArr(response.data, 10))\n      .then(questions => {\n        this.setState({qBank: questions.slice(0,this.state.numberq)})\n      })\n    }\n    //\n    else {\n      console.log('Not a valid deck')\n    }\n  }\n\n  onNumberqChange = (newNumberq) =>\n    this.setState({numberq: newNumberq.target.value>0&&newNumberq.target.value<10\n      ? newNumberq.target.value : 10})\n\n  onDeckChange = (newDeck) => this.setState({deck: newDeck.target.value})\n\n  onAnswerChange = (newAnswer) => this.setState({answer: newAnswer.target.value})\n\n  onStart = () => {\n    this.getQuestions()\n    this.setState({\n      score: 0,\n      playing: this.state.playing===0 ? 1 : 0,\n      questionPage: 0\n    })\n    console.log(\"Finished onStart. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length)\n    // console.log('Quiz id: ', this.props.id)\n  }\n\n  onAgain = () => {\n    this.setState({\n      qBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n      rQBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n      cRQBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n      score: 0,\n      playing: this.state.playing===0 ? 1 : 0,\n      firstReview: 1,\n    })\n    console.log(\"Finished onAgain. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length)\n  }\n\n  onReview = () => {\n    var rQBank_cp = this.state.rQBank\n    rQBank_cp.splice(0,1)\n    this.setState({\n      numberq: this.state.firstReview===1 ? this.state.rQBank.length : this.state.cRQBank.length,\n      cRQBank: this.state.firstReview===1 ? JSON.parse(JSON.stringify(this.state.rQBank)) : JSON.parse(JSON.stringify(this.state.cRQBank)),\n      qBank: this.state.firstReview===1 ? JSON.parse(JSON.stringify(this.state.rQBank)) : JSON.parse(JSON.stringify(this.state.cRQBank)),\n      score: 0,\n      playing: 1,\n      firstReview: 0,\n      rQBank: [{kanji:\"\",hiragana:\"\",english:\"\"}]\n    })\n    console.log(this.state.cRQBank)\n  }\n\n  onSubmit = () => {\n    console.log(\"Started onSubmit. qBank: \" +this.state.qBank.length)\n    // Updates score, shows answer\n    this.setState({\n      score: this.state.qBank[0].hiragana===this.state.answer.trim() ?\n        this.state.score+1 : this.state.score,\n      questionPage: 1,\n      rQBank: this.state.qBank[0].hiragana===this.state.answer.trim() ?\n        this.state.rQBank : [...this.state.rQBank, this.state.qBank[0]]\n    })\n\n    // Add wrong answer to review deck in db when you're not playing quiz with the review deck\n    if (this.state.qBank[0].hiragana!==this.state.answer.trim() && this.state.deck!=='review') {\n      fetch(`http://localhost:4000/review?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}&hiragana=${this.state.qBank[0].hiragana}&english=${this.state.qBank[0].english}`)\n    }\n\n    // Add to deck progress in db\n    fetch(`http://localhost:4000/progress?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}`)\n\n    console.log(\"Finished onSubmit. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length +\" rQBank: \" +this.state.rQBank.length)\n  }\n\n  onSkip = () => {\n    // Shows answer\n    this.setState({\n      questionPage: 1,\n      rQBank: [...this.state.rQBank, this.state.qBank[0]]\n    })\n    fetch(`http://localhost:4000/review?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}&hiragana=${this.state.qBank[0].hiragana}&english=${this.state.qBank[0].english}`)\n    fetch(`http://localhost:4000/progress?googleId=${this.props.id}&deck=${this.state.deck}&kanji=${this.state.qBank[0].kanji}`)\n  }\n\n  onEnterPress = (func,e) => {\n    var code=e.keyCode || e.which\n    if (code===13) {\n      func()\n    }\n  }\n\n  onNext = () => {\n    // Updates question, resets answer-input value\n    var qBank_cp=this.state.qBank\n    qBank_cp.splice(0,1)\n    this.setState({\n      qBank: qBank_cp,\n      answer: '',\n      questionPage: 0, // Back to question\n      playing: this.state.qBank.length===0 ? 2 : this.state.playing // If user answered all, quit quiz\n    })\n  }\n\n  /*Actual rendering from here*/\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"title\">Quiz</div>\n        {this.state.playing===0&&\n        <QuizStart\n          numberq={this.state.numberq}\n          onNumberqChange={this.onNumberqChange}\n          deck={this.state.deck}\n          onDeckChange={this.onDeckChange}\n          onStart={this.onStart}\n        />\n        }\n        {this.state.playing===1&&\n          <QuizState\n            qBank={this.state.qBank}\n            numberq={this.state.numberq}\n            deck={this.state.deck}\n            answer={this.state.answer}\n            questionPage={this.state.questionPage}\n            onSubmit={this.onSubmit}\n            onSkip={this.onSkip}\n            onAnswerChange={this.onAnswerChange}\n            onEnterPress={this.onEnterPress}\n            onNext={this.onNext}\n            displayDeckName={this.props.displayDeckName}\n          />\n        }\n        {this.state.playing===2&&\n          <QuizResult\n            score={this.state.score}\n            numberq={this.state.numberq}\n            playAgain={this.onAgain}\n            review={this.onReview}\n            firstReview={this.state.firstReview}\n          />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}