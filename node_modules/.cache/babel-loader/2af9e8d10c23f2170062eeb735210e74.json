{"ast":null,"code":"var _jsxFileName = \"/home/byungchan/projects/JapaneseQuiz/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport N1 from './assets/preMadeDecks/N1';\nimport N2 from './assets/preMadeDecks/N2';\nimport QuizStart from './components/QuizStart';\nimport QuizState from './components/QuizState';\nimport QuizResult from './components/QuizResult';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: 0,\n      //Start page: 0, In-game: 1, Results page: 2\n      deck: 'N1',\n      numberq: 1,\n      //Total number of questions in the quiz (min 1, max 10)\n      score: 0,\n      qBank: [{\n        kanji: \"\",\n        hiragana: \"\",\n        english: \"\"\n      }],\n      answer: ''\n    };\n\n    this.getQuestions = () => {\n      if (this.state.deck === 'N1') {\n        N1().then(question => this.setState({\n          qBank: question.slice(0, this.state.numberq)\n        }));\n      } else if (this.state.deck === 'N2') {\n        N2().then(question => this.setState({\n          qBank: question.slice(0, this.state.numberq)\n        }));\n      }\n    };\n\n    this.onNumberqChange = newNumberq => this.setState({\n      numberq: newNumberq.target.value > 0 && newNumberq.target.value < 10 ? newNumberq.target.value : 10\n    });\n\n    this.onStart = () => {\n      this.getQuestions();\n      this.setState({\n        score: 0,\n        playing: this.state.playing === 0 ? 1 : 0\n      });\n      console.log(\"Finished onStart. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length);\n    };\n\n    this.onAgain = () => {\n      this.setState({\n        qBank: [{\n          kanji: \"\",\n          hiragana: \"\",\n          english: \"\"\n        }],\n        score: 0,\n        playing: this.state.playing === 0 ? 1 : 0\n      });\n      console.log(\"Finished onAgain. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length);\n    };\n\n    this.onDeckChange = newDeck => this.setState({\n      deck: newDeck.target.value\n    });\n\n    this.onAnswerChange = newAnswer => this.setState({\n      answer: newAnswer.target.value\n    });\n\n    this.onSubmit = e => {\n      console.log(\"Started onSubmit. qBank: \" + this.state.qBank.length);\n      e.preventDefault(); // Update score and resets the answer <input>\n\n      this.setState({\n        score: this.state.qBank[0].Hiragana === this.state.answer ? this.state.score + 1 : this.state.score,\n        answer: ''\n      }); // Update question\n\n      var qBank_cp = this.state.qBank;\n      qBank_cp.splice(0, 1);\n      this.setState({\n        qBank: qBank_cp\n      }); // If user answered all, quit quiz\n\n      if (this.state.qBank.length === 0) {\n        this.setState({\n          playing: 2\n        });\n      }\n\n      console.log(\"Finished onSubmit. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length);\n    };\n\n    this.onSkip = () => {\n      // Update question\n      var qBank_cp = this.state.qBank;\n      qBank_cp.splice(0, 1);\n      this.setState({\n        qBank: qBank_cp,\n        answer: ''\n      }); // If user answered all, quit quiz\n\n      if (this.state.qBank.length === 0) {\n        this.setState({\n          playing: 2\n        });\n      }\n    };\n  }\n\n  /*Actual rendering from here*/\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Quiz\"), this.state.playing === 0 && /*#__PURE__*/React.createElement(QuizStart, {\n      numberq: this.state.numberq,\n      onNumberqChange: this.onNumberqChange,\n      deck: this.state.deck,\n      onDeckChange: this.onDeckChange,\n      onStart: this.onStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), this.state.playing === 1 && /*#__PURE__*/React.createElement(QuizState, {\n      qBank: this.state.qBank,\n      numberq: this.state.numberq,\n      deck: this.state.deck,\n      answer: this.state.answer,\n      onSubmit: this.onSubmit,\n      onSkip: this.onSkip,\n      onAnswerChange: this.onAnswerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), this.state.playing === 2 && /*#__PURE__*/React.createElement(QuizResult, {\n      score: this.state.score,\n      numberq: this.state.numberq,\n      playAgain: this.onAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n;\nReactDOM.render( /*#__PURE__*/React.createElement(Quiz, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/byungchan/projects/JapaneseQuiz/src/index.js"],"names":["React","Component","ReactDOM","N1","N2","QuizStart","QuizState","QuizResult","Quiz","state","playing","deck","numberq","score","qBank","kanji","hiragana","english","answer","getQuestions","then","question","setState","slice","onNumberqChange","newNumberq","target","value","onStart","console","log","length","onAgain","onDeckChange","newDeck","onAnswerChange","newAnswer","onSubmit","e","preventDefault","Hiragana","qBank_cp","splice","onSkip","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport N1 from './assets/preMadeDecks/N1';\nimport N2 from './assets/preMadeDecks/N2';\nimport QuizStart from './components/QuizStart';\nimport QuizState from './components/QuizState';\nimport QuizResult from './components/QuizResult';\n\nclass Quiz extends Component {\n  state={\n    playing: 0, //Start page: 0, In-game: 1, Results page: 2\n    deck: 'N1',\n    numberq: 1, //Total number of questions in the quiz (min 1, max 10)\n    score: 0,\n    qBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n    answer: ''\n  };\n\n  /*Functions*/\n  getQuestions = () => {\n    if (this.state.deck==='N1') {\n      N1().then(\n        question => this.setState({qBank: question.slice(0,this.state.numberq)})\n      )\n    }\n    else if (this.state.deck==='N2') {\n      N2().then(\n        question => this.setState({qBank: question.slice(0,this.state.numberq)})\n      )\n    }\n  };\n\n  onNumberqChange = (newNumberq) =>\n    this.setState({numberq: newNumberq.target.value>0&&newNumberq.target.value<10\n      ? newNumberq.target.value : 10});\n\n  onStart = () => {\n    this.getQuestions();\n    this.setState({\n      score: 0,\n      playing: this.state.playing===0 ? 1 : 0\n    });\n    console.log(\"Finished onStart. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length);\n  };\n\n  onAgain = () => {\n    this.setState({\n      qBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n      score: 0,\n      playing: this.state.playing===0 ? 1 : 0\n    });\n    console.log(\"Finished onAgain. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length);\n  };\n\n  onDeckChange = (newDeck) => this.setState({deck: newDeck.target.value});\n\n  onAnswerChange = (newAnswer) => this.setState({answer: newAnswer.target.value});\n\n  onSubmit = (e) => {\n    console.log(\"Started onSubmit. qBank: \" +this.state.qBank.length);\n    e.preventDefault();\n    // Update score and resets the answer <input>\n    this.setState({\n      score:\n        this.state.qBank[0].Hiragana===this.state.answer ?\n        this.state.score+1 : this.state.score,\n      answer: ''\n      });\n\n    // Update question\n    var qBank_cp=this.state.qBank;\n    qBank_cp.splice(0,1);\n    this.setState({qBank: qBank_cp});\n\n    // If user answered all, quit quiz\n    if (this.state.qBank.length===0) {\n      this.setState({playing: 2});\n    }\n    console.log(\"Finished onSubmit. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length);\n  };\n\n  onSkip = () => {\n    // Update question\n    var qBank_cp=this.state.qBank;\n    qBank_cp.splice(0,1);\n    this.setState({\n      qBank: qBank_cp,\n      answer: ''\n    });\n\n    // If user answered all, quit quiz\n    if (this.state.qBank.length===0) {\n      this.setState({playing: 2});\n    }\n  }\n\n  /*Actual rendering from here*/\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"title\">Quiz</div>\n        {this.state.playing===0&&\n        <QuizStart\n          numberq={this.state.numberq}\n          onNumberqChange={this.onNumberqChange}\n          deck={this.state.deck}\n          onDeckChange={this.onDeckChange}\n          onStart={this.onStart}\n        />\n        }\n        {this.state.playing===1&&\n          <QuizState\n            qBank={this.state.qBank}\n            numberq={this.state.numberq}\n            deck={this.state.deck}\n            answer={this.state.answer}\n            onSubmit={this.onSubmit}\n            onSkip={this.onSkip}\n            onAnswerChange={this.onAnswerChange}\n          />\n        }\n        {this.state.playing===2&&\n          <QuizResult\n            score={this.state.score}\n            numberq={this.state.numberq}\n            playAgain={this.onAgain}\n          />\n        }\n      </div>\n    );\n  }\n};\n\n\nReactDOM.render(\n  <Quiz />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}