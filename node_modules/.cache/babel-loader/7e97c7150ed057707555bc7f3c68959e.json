{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar ConnectionCosts = require(\"../ConnectionCosts\");\n/**\n * Builder class for constructing ConnectionCosts object\n * @constructor\n */\n\n\nfunction ConnectionCostsBuilder() {\n  this.lines = 0;\n  this.connection_cost = null;\n}\n\nConnectionCostsBuilder.prototype.putLine = function (line) {\n  if (this.lines === 0) {\n    var dimensions = line.split(\" \");\n    var forward_dimension = dimensions[0];\n    var backward_dimension = dimensions[1];\n\n    if (forward_dimension < 0 || backward_dimension < 0) {\n      throw \"Parse error of matrix.def\";\n    }\n\n    this.connection_cost = new ConnectionCosts(forward_dimension, backward_dimension);\n    this.lines++;\n    return this;\n  }\n\n  var costs = line.split(\" \");\n\n  if (costs.length !== 3) {\n    return this;\n  }\n\n  var forward_id = parseInt(costs[0]);\n  var backward_id = parseInt(costs[1]);\n  var cost = parseInt(costs[2]);\n\n  if (forward_id < 0 || backward_id < 0 || !isFinite(forward_id) || !isFinite(backward_id) || this.connection_cost.forward_dimension <= forward_id || this.connection_cost.backward_dimension <= backward_id) {\n    throw \"Parse error of matrix.def\";\n  }\n\n  this.connection_cost.put(forward_id, backward_id, cost);\n  this.lines++;\n  return this;\n};\n\nConnectionCostsBuilder.prototype.build = function () {\n  return this.connection_cost;\n};\n\nmodule.exports = ConnectionCostsBuilder;","map":{"version":3,"sources":["/home/byungchan/Projects/JapaneseQuiz/node_modules/kuromoji/src/dict/builder/ConnectionCostsBuilder.js"],"names":["ConnectionCosts","require","ConnectionCostsBuilder","lines","connection_cost","prototype","putLine","line","dimensions","split","forward_dimension","backward_dimension","costs","length","forward_id","parseInt","backward_id","cost","isFinite","put","build","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA7B;AAEA;;;;;;AAIA,SAASC,sBAAT,GAAkC;AAC9B,OAAKC,KAAL,GAAa,CAAb;AACA,OAAKC,eAAL,GAAuB,IAAvB;AACH;;AAEDF,sBAAsB,CAACG,SAAvB,CAAiCC,OAAjC,GAA2C,UAAUC,IAAV,EAAgB;AACvD,MAAI,KAAKJ,KAAL,KAAe,CAAnB,EAAsB;AAClB,QAAIK,UAAU,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAjB;AACA,QAAIC,iBAAiB,GAAGF,UAAU,CAAC,CAAD,CAAlC;AACA,QAAIG,kBAAkB,GAAGH,UAAU,CAAC,CAAD,CAAnC;;AAEA,QAAIE,iBAAiB,GAAG,CAApB,IAAyBC,kBAAkB,GAAG,CAAlD,EAAqD;AACjD,YAAM,2BAAN;AACH;;AAED,SAAKP,eAAL,GAAuB,IAAIJ,eAAJ,CAAoBU,iBAApB,EAAuCC,kBAAvC,CAAvB;AACA,SAAKR,KAAL;AACA,WAAO,IAAP;AACH;;AAED,MAAIS,KAAK,GAAGL,IAAI,CAACE,KAAL,CAAW,GAAX,CAAZ;;AAEA,MAAIG,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACpB,WAAO,IAAP;AACH;;AAED,MAAIC,UAAU,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAzB;AACA,MAAII,WAAW,GAAGD,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAA1B;AACA,MAAIK,IAAI,GAAGF,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAnB;;AAEA,MAAIE,UAAU,GAAG,CAAb,IAAkBE,WAAW,GAAG,CAAhC,IAAqC,CAACE,QAAQ,CAACJ,UAAD,CAA9C,IAA8D,CAACI,QAAQ,CAACF,WAAD,CAAvE,IACA,KAAKZ,eAAL,CAAqBM,iBAArB,IAA0CI,UAD1C,IACwD,KAAKV,eAAL,CAAqBO,kBAArB,IAA2CK,WADvG,EACoH;AAChH,UAAM,2BAAN;AACH;;AAED,OAAKZ,eAAL,CAAqBe,GAArB,CAAyBL,UAAzB,EAAqCE,WAArC,EAAkDC,IAAlD;AACA,OAAKd,KAAL;AACA,SAAO,IAAP;AACH,CAjCD;;AAmCAD,sBAAsB,CAACG,SAAvB,CAAiCe,KAAjC,GAAyC,YAAY;AACjD,SAAO,KAAKhB,eAAZ;AACH,CAFD;;AAIAiB,MAAM,CAACC,OAAP,GAAiBpB,sBAAjB","sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ConnectionCosts = require(\"../ConnectionCosts\");\n\n/**\n * Builder class for constructing ConnectionCosts object\n * @constructor\n */\nfunction ConnectionCostsBuilder() {\n    this.lines = 0;\n    this.connection_cost = null;\n}\n\nConnectionCostsBuilder.prototype.putLine = function (line) {\n    if (this.lines === 0) {\n        var dimensions = line.split(\" \");\n        var forward_dimension = dimensions[0];\n        var backward_dimension = dimensions[1];\n\n        if (forward_dimension < 0 || backward_dimension < 0) {\n            throw \"Parse error of matrix.def\";\n        }\n\n        this.connection_cost = new ConnectionCosts(forward_dimension, backward_dimension);\n        this.lines++;\n        return this;\n    }\n\n    var costs = line.split(\" \");\n\n    if (costs.length !== 3) {\n        return this;\n    }\n\n    var forward_id = parseInt(costs[0]);\n    var backward_id = parseInt(costs[1]);\n    var cost = parseInt(costs[2]);\n\n    if (forward_id < 0 || backward_id < 0 || !isFinite(forward_id) || !isFinite(backward_id) ||\n        this.connection_cost.forward_dimension <= forward_id || this.connection_cost.backward_dimension <= backward_id) {\n        throw \"Parse error of matrix.def\";\n    }\n\n    this.connection_cost.put(forward_id, backward_id, cost);\n    this.lines++;\n    return this;\n};\n\nConnectionCostsBuilder.prototype.build = function () {\n    return this.connection_cost;\n};\n\nmodule.exports = ConnectionCostsBuilder;\n"]},"metadata":{},"sourceType":"script"}