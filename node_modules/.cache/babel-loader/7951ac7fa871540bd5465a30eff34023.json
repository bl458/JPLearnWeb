{"ast":null,"code":"var _jsxFileName = \"/home/byungchan/Projects/JapaneseQuiz/src/video/Subtitle.js\";\nimport React, { useState } from 'react';\nimport Kuroshiro from 'kuroshiro';\nimport KuromojiAnalyzer from \"kuroshiro-analyzer-kuromoji\";\nimport { Tooltip } from 'reactstrap';\nimport ReactTooltip from \"react-tooltip\";\n\nconst toFuri = async jp => {\n  var kuroshiro = new Kuroshiro();\n  await kuroshiro.init(new KuromojiAnalyzer({\n    dictPath: \"/dict\"\n  }));\n  return await kuroshiro.convert(jp, {\n    to: \"hiragana\"\n  });\n};\n\nconst onHighlight = () => {\n  console.log(\"Entered onHighlight\");\n  ReactTooltip.hide();\n\n  if (window.getSelection().toString() !== '') {\n    ReactTooltip.hide();\n    toFuri(window.getSelection().toString()).then(result => console.log(result));\n  }\n};\n\nconst Subtitle = ({\n  engSub,\n  jpSub\n}) => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(window.getSelection().toString() !== '' && !tooltipOpen);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle\",\n    onClick: onHighlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    href: \"#\",\n    id: \"DisabledAutoHideExample\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, \"Sometimes you need to allow users to select text within a tooltip.\")), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"auto-start\",\n    isOpen: tooltipOpen,\n    autohide: false,\n    target: \"DisabledAutoHideExample\",\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, window.getSelection().toString()), /*#__PURE__*/React.createElement(\"a\", {\n    \"data-tip\": \"custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"( \\u2022\\u0300\\u0434\\u2022\\u0301)\"), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), jpSub, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), engSub);\n};\n\nexport default Subtitle;","map":{"version":3,"sources":["/home/byungchan/Projects/JapaneseQuiz/src/video/Subtitle.js"],"names":["React","useState","Kuroshiro","KuromojiAnalyzer","Tooltip","ReactTooltip","toFuri","jp","kuroshiro","init","dictPath","convert","to","onHighlight","console","log","hide","window","getSelection","toString","then","result","Subtitle","engSub","jpSub","tooltipOpen","setTooltipOpen","toggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAGA,MAAMC,MAAM,GAAG,MAAOC,EAAP,IAAc;AAC3B,MAAIC,SAAS,GAAG,IAAIN,SAAJ,EAAhB;AACA,QAAMM,SAAS,CAACC,IAAV,CAAe,IAAIN,gBAAJ,CAAqB;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAArB,CAAf,CAAN;AACA,SAAO,MAAMF,SAAS,CAACG,OAAV,CAAkBJ,EAAlB,EAAsB;AAAEK,IAAAA,EAAE,EAAE;AAAN,GAAtB,CAAb;AACD,CAJD;;AAMA,MAAMC,WAAW,GAAG,MAAM;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAV,EAAAA,YAAY,CAACW,IAAb;;AACA,MAAIC,MAAM,CAACC,YAAP,GAAsBC,QAAtB,OAAqC,EAAzC,EAA6C;AAC3Cd,IAAAA,YAAY,CAACW,IAAb;AACAV,IAAAA,MAAM,CAACW,MAAM,CAACC,YAAP,GAAsBC,QAAtB,EAAD,CAAN,CAAyCC,IAAzC,CACGC,MAAD,IAAYP,OAAO,CAACC,GAAR,CAAYM,MAAZ,CADd;AAGD;AACF,CATD;;AAWA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAqB;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAM0B,MAAM,GAAG,MAAMD,cAAc,CAACT,MAAM,CAACC,YAAP,GAAsBC,QAAtB,OAAqC,EAArC,IAAyC,CAACM,WAA3C,CAAnC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEZ,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,EAAE,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAAH,CAFF,eAGE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAgC,IAAA,MAAM,EAAEY,WAAxC;AAAqD,IAAA,QAAQ,EAAE,KAA/D;AAAsE,IAAA,MAAM,EAAC,yBAA7E;AAAuG,IAAA,MAAM,EAAEE,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,MAAM,CAACC,YAAP,GAAsBC,QAAtB,EADH,CAHF,eAOE;AAAG,gBAAS,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAPF,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUGK,KAVH,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcGD,MAdH,CADF;AAkBD,CAvBD;;AAyBA,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport Kuroshiro from 'kuroshiro';\nimport KuromojiAnalyzer from \"kuroshiro-analyzer-kuromoji\";\nimport { Tooltip } from 'reactstrap';\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst toFuri = async (jp) => {\n  var kuroshiro = new Kuroshiro();\n  await kuroshiro.init(new KuromojiAnalyzer({ dictPath: \"/dict\" }));\n  return await kuroshiro.convert(jp, { to: \"hiragana\" });\n}\n\nconst onHighlight = () => {\n  console.log(\"Entered onHighlight\");\n  ReactTooltip.hide()\n  if (window.getSelection().toString() !== '') {\n    ReactTooltip.hide()\n    toFuri(window.getSelection().toString()).then(\n      (result) => console.log(result)\n    )\n  }\n}\n\nconst Subtitle = ({engSub, jpSub}) => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(window.getSelection().toString() !== ''&&!tooltipOpen);\n\n  return (\n    <div className=\"subtitle\" onClick={onHighlight}>\n\n      <p><span href=\"#\" id=\"DisabledAutoHideExample\">Sometimes you need to allow users to select text within a tooltip.</span></p>\n      <Tooltip placement='auto-start' isOpen={tooltipOpen} autohide={false} target=\"DisabledAutoHideExample\" toggle={toggle}>\n        {window.getSelection().toString()}\n      </Tooltip>\n\n      <a data-tip='custom'>( •̀д•́)</a>\n      <ReactTooltip />\n\n      {jpSub}\n\n      <br/>\n\n      {engSub}\n    </div>\n  );\n}\n\nexport default Subtitle;\n"]},"metadata":{},"sourceType":"module"}