{"ast":null,"code":"var _jsxFileName = \"/home/byungchan/projects/japanese/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport N1 from './assets/preMadeDecks/N1';\nimport QuizStart from './components/QuizStart';\nimport QuizState from './components/QuizState';\nimport QuizResult from './components/QuizResult';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: 0,\n      //Start page: 0, In-game: 1, Results page: 2\n      numberq: 1,\n      //Total number of questions in the quiz (min 1, max 10)\n      score: 0,\n      qBank: [],\n      answer: ''\n    };\n\n    this.getQuestions = () => {\n      N1().then(question => this.setState({\n        qBank: question\n      }));\n    };\n\n    this.onNumberqChange = newNumberq => this.setState({\n      numberq: newNumberq.target.value > 0 && newNumberq.target.value < 10 ? newNumberq.target.value : 10\n    });\n\n    this.onStart = () => this.setState({\n      qBank: this.state.qBank.slice(0, this.state.numberq),\n      score: 0,\n      playing: this.state.playing === 0 ? 1 : 0\n    });\n\n    this.onAnswerChange = newAnswer => this.setState({\n      answer: newAnswer\n    });\n\n    this.onSubmit = () => {\n      // Update score and resets the answer <input>\n      this.setState({\n        score: this.state.qBank[0].hiragana === this.state.answer ? this.state.score + 1 : this.state.score\n      });\n      console.log(this.state.score); // Update question\n\n      var qBank_cp = this.state.qBank;\n      qBank_cp.splice(0, 1);\n      this.setState({\n        qBank: qBank_cp\n      }); // If user answered all, quit quiz\n\n      if (this.state.qBank.length === 0) {\n        this.setState({\n          playing: 2\n        });\n        this.getQuestions();\n      }\n    };\n\n    this.onSkip = () => {\n      // Update question\n      var qBank_cp = this.state.qBank;\n      qBank_cp.splice(0, 1);\n      this.setState({\n        qBank: qBank_cp\n      }); // If user answered all, quit quiz\n\n      if (this.state.qBank.length === 0) {\n        this.setState({\n          playing: 2\n        });\n        this.getQuestions();\n      }\n    };\n  }\n\n  /*Actual rendering from here*/\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Quiz\"), this.state.playing === 0 && /*#__PURE__*/React.createElement(QuizStart, {\n      onNumberqChange: this.onNumberqChange,\n      onStart: this.onStart,\n      numberq: this.state.numberq,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), this.state.playing === 1 && /*#__PURE__*/React.createElement(QuizState, {\n      qBank: this.state.qBank,\n      numberq: this.state.numberq,\n      onSubmit: this.onSubmit,\n      onSkip: this.onSkip,\n      onAnswerChange: this.onAnswerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), this.state.playing === 2 && /*#__PURE__*/React.createElement(QuizResult, {\n      score: this.state.score,\n      numberq: this.state.numberq,\n      playAgain: this.onStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n;\nReactDOM.render( /*#__PURE__*/React.createElement(Quiz, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/byungchan/projects/japanese/src/index.js"],"names":["React","Component","ReactDOM","N1","QuizStart","QuizState","QuizResult","Quiz","state","playing","numberq","score","qBank","answer","getQuestions","then","question","setState","onNumberqChange","newNumberq","target","value","onStart","slice","onAnswerChange","newAnswer","onSubmit","hiragana","console","log","qBank_cp","splice","length","onSkip","componentDidMount","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport N1 from './assets/preMadeDecks/N1';\nimport QuizStart from './components/QuizStart';\nimport QuizState from './components/QuizState';\nimport QuizResult from './components/QuizResult';\n\nclass Quiz extends Component {\n  state={\n    playing: 0, //Start page: 0, In-game: 1, Results page: 2\n    numberq: 1, //Total number of questions in the quiz (min 1, max 10)\n    score: 0,\n    qBank: [],\n    answer: ''\n  };\n\n  /*Functions*/\n  getQuestions = () => {\n    N1().then(\n      question => this.setState({qBank: question})\n    )\n  };\n\n  onNumberqChange = (newNumberq) =>\n    this.setState({numberq: newNumberq.target.value>0&&newNumberq.target.value<10\n      ? newNumberq.target.value : 10});\n\n  onStart = () => this.setState({\n    qBank: this.state.qBank.slice(0,this.state.numberq),\n    score: 0,\n    playing: this.state.playing===0 ? 1 : 0\n  });\n\n  onAnswerChange = (newAnswer) => this.setState({answer: newAnswer});\n\n  onSubmit = () => {\n    // Update score and resets the answer <input>\n    this.setState({\n      score:\n        this.state.qBank[0].hiragana===this.state.answer ?\n        this.state.score+1 : this.state.score\n      });\n\n    console.log(this.state.score)\n\n    // Update question\n    var qBank_cp=this.state.qBank;\n    qBank_cp.splice(0,1);\n    this.setState({qBank: qBank_cp});\n\n    // If user answered all, quit quiz\n    if (this.state.qBank.length===0) {\n      this.setState({playing: 2});\n      this.getQuestions();\n    }\n  };\n\n  onSkip = () => {\n    // Update question\n    var qBank_cp=this.state.qBank;\n    qBank_cp.splice(0,1);\n    this.setState({qBank: qBank_cp});\n\n    // If user answered all, quit quiz\n    if (this.state.qBank.length===0) {\n      this.setState({playing: 2});\n      this.getQuestions();\n    }\n  }\n\n  /*Actual rendering from here*/\n  componentDidMount() {\n    this.getQuestions();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"title\">Quiz</div>\n        {this.state.playing===0&&\n        <QuizStart\n          onNumberqChange={this.onNumberqChange}\n          onStart={this.onStart}\n          numberq={this.state.numberq}\n        />\n        }\n        {this.state.playing===1&&\n          <QuizState\n            qBank={this.state.qBank}\n            numberq={this.state.numberq}\n            onSubmit={this.onSubmit}\n            onSkip={this.onSkip}\n            onAnswerChange={this.onAnswerChange}\n          />\n        }\n        {this.state.playing===2&&\n          <QuizResult\n            score={this.state.score}\n            numberq={this.state.numberq}\n            playAgain={this.onStart}\n          />\n        }\n      </div>\n    );\n  }\n};\n\n\nReactDOM.render(\n  <Quiz />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}