{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n/**\n * String wrapper for UTF-16 surrogate pair (4 bytes)\n * @param {string} str String to wrap\n * @constructor\n */\n\nfunction SurrogateAwareString(str) {\n  this.str = str;\n  this.index_mapping = [];\n\n  for (var pos = 0; pos < str.length; pos++) {\n    var ch = str.charAt(pos);\n    this.index_mapping.push(pos);\n\n    if (SurrogateAwareString.isSurrogatePair(ch)) {\n      pos++;\n    }\n  } // Surrogate aware length\n\n\n  this.length = this.index_mapping.length;\n}\n\nSurrogateAwareString.prototype.slice = function (index) {\n  if (this.index_mapping.length <= index) {\n    return \"\";\n  }\n\n  var surrogate_aware_index = this.index_mapping[index];\n  return this.str.slice(surrogate_aware_index);\n};\n\nSurrogateAwareString.prototype.charAt = function (index) {\n  if (this.str.length <= index) {\n    return \"\";\n  }\n\n  var surrogate_aware_start_index = this.index_mapping[index];\n  var surrogate_aware_end_index = this.index_mapping[index + 1];\n\n  if (surrogate_aware_end_index == null) {\n    return this.str.slice(surrogate_aware_start_index);\n  }\n\n  return this.str.slice(surrogate_aware_start_index, surrogate_aware_end_index);\n};\n\nSurrogateAwareString.prototype.charCodeAt = function (index) {\n  if (this.index_mapping.length <= index) {\n    return NaN;\n  }\n\n  var surrogate_aware_index = this.index_mapping[index];\n  var upper = this.str.charCodeAt(surrogate_aware_index);\n  var lower;\n\n  if (upper >= 0xD800 && upper <= 0xDBFF && surrogate_aware_index < this.str.length) {\n    lower = this.str.charCodeAt(surrogate_aware_index + 1);\n\n    if (lower >= 0xDC00 && lower <= 0xDFFF) {\n      return (upper - 0xD800) * 0x400 + lower - 0xDC00 + 0x10000;\n    }\n  }\n\n  return upper;\n};\n\nSurrogateAwareString.prototype.toString = function () {\n  return this.str;\n};\n\nSurrogateAwareString.isSurrogatePair = function (ch) {\n  var utf16_code = ch.charCodeAt(0);\n\n  if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n    // surrogate pair\n    return true;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = SurrogateAwareString;","map":{"version":3,"sources":["/home/byungchan/Projects/JapaneseQuiz/node_modules/kuromoji/src/util/SurrogateAwareString.js"],"names":["SurrogateAwareString","str","index_mapping","pos","length","ch","charAt","push","isSurrogatePair","prototype","slice","index","surrogate_aware_index","surrogate_aware_start_index","surrogate_aware_end_index","charCodeAt","NaN","upper","lower","toString","utf16_code","module","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * String wrapper for UTF-16 surrogate pair (4 bytes)\n * @param {string} str String to wrap\n * @constructor\n */\nfunction SurrogateAwareString(str) {\n    this.str = str;\n    this.index_mapping = [];\n\n    for (var pos = 0; pos < str.length; pos++) {\n        var ch = str.charAt(pos);\n        this.index_mapping.push(pos);\n        if (SurrogateAwareString.isSurrogatePair(ch)) {\n            pos++;\n        }\n    }\n    // Surrogate aware length\n    this.length = this.index_mapping.length;\n}\n\nSurrogateAwareString.prototype.slice = function (index) {\n    if (this.index_mapping.length <= index) {\n        return \"\";\n    }\n    var surrogate_aware_index = this.index_mapping[index];\n    return this.str.slice(surrogate_aware_index);\n};\n\nSurrogateAwareString.prototype.charAt = function (index) {\n    if (this.str.length <= index) {\n        return \"\";\n    }\n    var surrogate_aware_start_index = this.index_mapping[index];\n    var surrogate_aware_end_index = this.index_mapping[index + 1];\n\n    if (surrogate_aware_end_index == null) {\n        return this.str.slice(surrogate_aware_start_index);\n    }\n    return this.str.slice(surrogate_aware_start_index, surrogate_aware_end_index);\n};\n\nSurrogateAwareString.prototype.charCodeAt = function (index) {\n    if (this.index_mapping.length <= index) {\n        return NaN;\n    }\n    var surrogate_aware_index = this.index_mapping[index];\n    var upper = this.str.charCodeAt(surrogate_aware_index);\n    var lower;\n    if (upper >= 0xD800 && upper <= 0xDBFF && surrogate_aware_index < this.str.length) {\n        lower = this.str.charCodeAt(surrogate_aware_index + 1);\n        if (lower >= 0xDC00 && lower <= 0xDFFF) {\n            return (upper - 0xD800) * 0x400 + lower - 0xDC00 + 0x10000;\n        }\n    }\n    return upper;\n};\n\nSurrogateAwareString.prototype.toString = function () {\n    return this.str;\n};\n\nSurrogateAwareString.isSurrogatePair = function (ch) {\n    var utf16_code = ch.charCodeAt(0);\n    if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n        // surrogate pair\n        return true;\n    } else {\n        return false;\n    }\n};\n\nmodule.exports = SurrogateAwareString;\n"]},"metadata":{},"sourceType":"script"}