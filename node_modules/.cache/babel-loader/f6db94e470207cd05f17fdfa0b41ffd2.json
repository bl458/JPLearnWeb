{"ast":null,"code":"var _jsxFileName = \"/home/byungchan/projects/JapaneseQuiz/src/quiz/Quiz.js\";\nimport React, { Component } from 'react';\nimport './Quiz.css';\nimport N1 from '../_assets/preMadeDecks/N1';\nimport N2 from '../_assets/preMadeDecks/N2';\nimport QuizStart from './QuizStart';\nimport QuizState from './QuizState';\nimport QuizResult from './QuizResult';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: 0,\n      //Start page: 0, In-game: 1, Results page: 2\n      deck: 'N1',\n      numberq: 1,\n      //Total number of questions in the quiz (min 1, max 10)\n      score: 0,\n      qBank: [{\n        kanji: \"\",\n        hiragana: \"\",\n        english: \"\"\n      }],\n      answer: '',\n      questionPage: 0 //Question Page: 0, Answer page: 1\n\n    };\n\n    this.getQuestions = () => {\n      if (this.state.deck === 'N1') {\n        N1().then(question => this.setState({\n          qBank: question.slice(0, this.state.numberq)\n        }));\n      } else if (this.state.deck === 'N2') {\n        N2().then(question => this.setState({\n          qBank: question.slice(0, this.state.numberq)\n        }));\n      }\n    };\n\n    this.onNumberqChange = newNumberq => this.setState({\n      numberq: newNumberq.target.value > 0 && newNumberq.target.value < 10 ? newNumberq.target.value : 10\n    });\n\n    this.onDeckChange = newDeck => this.setState({\n      deck: newDeck.target.value\n    });\n\n    this.onAnswerChange = newAnswer => this.setState({\n      answer: newAnswer.target.value\n    });\n\n    this.onStart = () => {\n      this.getQuestions();\n      this.setState({\n        score: 0,\n        playing: this.state.playing === 0 ? 1 : 0,\n        questionPage: 0\n      });\n      console.log(\"Finished onStart. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length);\n    };\n\n    this.onAgain = () => {\n      this.setState({\n        qBank: [{\n          kanji: \"\",\n          hiragana: \"\",\n          english: \"\"\n        }],\n        score: 0,\n        playing: this.state.playing === 0 ? 1 : 0\n      });\n      console.log(\"Finished onAgain. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length);\n    };\n\n    this.onSubmit = () => {\n      console.log(\"Started onSubmit. qBank: \" + this.state.qBank.length); // Updates score\n\n      this.setState({\n        score: this.state.qBank[0].Hiragana === this.state.answer.trim() ? this.state.score + 1 : this.state.score,\n        questionPage: 1\n      });\n      console.log(\"Finished onSubmit. numberq: \" + this.state.numberq + \" qBank: \" + this.state.qBank.length);\n    };\n\n    this.onSkip = () => {\n      this.setState({\n        questionPage: 1\n      }); // If user answered all, quit quiz\n\n      if (this.state.qBank.length === 0) {\n        this.setState({\n          playing: 2\n        });\n      }\n    };\n\n    this.onEnterPress = e => {\n      var code = e.keyCode || e.which;\n\n      if (code === 13) {\n        this.onSubmit();\n      }\n    };\n\n    this.onNext = () => {\n      // Updates question, Resets answer-input value\n      var qBank_cp = this.state.qBank;\n      qBank_cp.splice(0, 1);\n      this.setState({\n        qBank: qBank_cp,\n        answer: ''\n      }); // Back to question\n\n      this.setState({\n        questionPage: 0\n      });\n    };\n  }\n\n  /*Actual rendering from here*/\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Quiz\"), this.state.playing === 0 && /*#__PURE__*/React.createElement(QuizStart, {\n      numberq: this.state.numberq,\n      onNumberqChange: this.onNumberqChange,\n      deck: this.state.deck,\n      onDeckChange: this.onDeckChange,\n      onStart: this.onStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), this.state.playing === 1 && /*#__PURE__*/React.createElement(QuizState, {\n      qBank: this.state.qBank,\n      numberq: this.state.numberq,\n      deck: this.state.deck,\n      answer: this.state.answer,\n      questionPage: this.state.questionPage,\n      onSubmit: this.onSubmit,\n      onSkip: this.onSkip,\n      onAnswerChange: this.onAnswerChange,\n      onEnterPress: this.onEnterPress,\n      onNext: this.onNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), this.state.playing === 2 && /*#__PURE__*/React.createElement(QuizResult, {\n      score: this.state.score,\n      numberq: this.state.numberq,\n      playAgain: this.onAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n;\nexport default Quiz;","map":{"version":3,"sources":["/home/byungchan/projects/JapaneseQuiz/src/quiz/Quiz.js"],"names":["React","Component","N1","N2","QuizStart","QuizState","QuizResult","Quiz","state","playing","deck","numberq","score","qBank","kanji","hiragana","english","answer","questionPage","getQuestions","then","question","setState","slice","onNumberqChange","newNumberq","target","value","onDeckChange","newDeck","onAnswerChange","newAnswer","onStart","console","log","length","onAgain","onSubmit","Hiragana","trim","onSkip","onEnterPress","e","code","keyCode","which","onNext","qBank_cp","splice","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Quiz.css'\nimport N1 from '../_assets/preMadeDecks/N1';\nimport N2 from '../_assets/preMadeDecks/N2';\nimport QuizStart from './QuizStart';\nimport QuizState from './QuizState';\nimport QuizResult from './QuizResult';\n\nclass Quiz extends Component {\n  state={\n    playing: 0, //Start page: 0, In-game: 1, Results page: 2\n    deck: 'N1',\n    numberq: 1, //Total number of questions in the quiz (min 1, max 10)\n    score: 0,\n    qBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n    answer: '',\n    questionPage: 0 //Question Page: 0, Answer page: 1\n  };\n\n  /*Functions*/\n  getQuestions = () => {\n    if (this.state.deck==='N1') {\n      N1().then(\n        question => this.setState({qBank: question.slice(0,this.state.numberq)})\n      )\n    }\n    else if (this.state.deck==='N2') {\n      N2().then(\n        question => this.setState({qBank: question.slice(0,this.state.numberq)})\n      )\n    }\n  };\n\n  onNumberqChange = (newNumberq) =>\n    this.setState({numberq: newNumberq.target.value>0&&newNumberq.target.value<10\n      ? newNumberq.target.value : 10});\n\n  onDeckChange = (newDeck) => this.setState({deck: newDeck.target.value});\n\n  onAnswerChange = (newAnswer) => this.setState({answer: newAnswer.target.value});\n\n  onStart = () => {\n    this.getQuestions();\n    this.setState({\n      score: 0,\n      playing: this.state.playing===0 ? 1 : 0,\n      questionPage: 0\n    });\n    console.log(\"Finished onStart. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length);\n  };\n\n  onAgain = () => {\n    this.setState({\n      qBank: [{kanji:\"\",hiragana:\"\",english:\"\"}],\n      score: 0,\n      playing: this.state.playing===0 ? 1 : 0\n    });\n    console.log(\"Finished onAgain. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length);\n  };\n\n  onSubmit = () => {\n    console.log(\"Started onSubmit. qBank: \" +this.state.qBank.length);\n    // Updates score\n    this.setState({\n      score:\n        this.state.qBank[0].Hiragana===this.state.answer.trim() ?\n        this.state.score+1 : this.state.score,\n      questionPage: 1\n    });\n\n    console.log(\"Finished onSubmit. numberq: \" +this.state.numberq +\" qBank: \" +this.state.qBank.length);\n  };\n\n  onSkip = () => {\n    this.setState({\n      questionPage: 1\n    });\n\n    // If user answered all, quit quiz\n    if (this.state.qBank.length===0) {\n      this.setState({playing: 2});\n    }\n  };\n\n  onEnterPress = (e) => {\n    var code=e.keyCode || e.which;\n    if (code===13) {\n      this.onSubmit();\n    }\n  };\n\n  onNext = () => {\n    // Updates question, Resets answer-input value\n    var qBank_cp=this.state.qBank;\n    qBank_cp.splice(0,1);\n    this.setState({\n      qBank: qBank_cp,\n      answer: ''\n    });\n\n    // Back to question\n    this.setState({\n      questionPage: 0\n    });\n  }\n\n  /*Actual rendering from here*/\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"title\">Quiz</div>\n        {this.state.playing===0&&\n        <QuizStart\n          numberq={this.state.numberq}\n          onNumberqChange={this.onNumberqChange}\n          deck={this.state.deck}\n          onDeckChange={this.onDeckChange}\n          onStart={this.onStart}\n        />\n        }\n        {this.state.playing===1&&\n          <QuizState\n            qBank={this.state.qBank}\n            numberq={this.state.numberq}\n            deck={this.state.deck}\n            answer={this.state.answer}\n            questionPage={this.state.questionPage}\n            onSubmit={this.onSubmit}\n            onSkip={this.onSkip}\n            onAnswerChange={this.onAnswerChange}\n            onEnterPress={this.onEnterPress}\n            onNext={this.onNext}\n          />\n        }\n        {this.state.playing===2&&\n          <QuizResult\n            score={this.state.score}\n            numberq={this.state.numberq}\n            playAgain={this.onAgain}\n          />\n        }\n      </div>\n    );\n  }\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}